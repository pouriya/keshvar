// DO NOT TOUCH THIS FILE. (Auto-generated by `keshvar-code-generator/src/countries.rs`)

// The Kingdom of Bahrain

#[cfg(all(feature = "bh", feature = "constants"))]
/// A module to access all constant country data for `The Kingdom of Bahrain`.
///
/// Note that to use this module, `constant` feature should be enabled.
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> =
        Some("{{recipient}}\n{{street}}\n{{postalcode}} {{city}}\n{{country}}");
    pub const ALPHA2: Alpha2 = Alpha2::BH;
    pub const ALPHA3: Alpha3 = Alpha3::BHR;
    pub const CONTINENT: Continent = Continent::Asia;
    pub const COUNTRY_CODE: usize = 973;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::BHD;
    pub const GEC: Option<GEC> = Some(GEC::BA);
    pub const INTERNATIONAL_PREFIX: &str = "00";
    pub const IOC: Option<IOC> = Some(IOC::BRN);
    pub const ISO_SHORT_NAME: &str = "Bahrain";
    pub const ISO_LONG_NAME: &str = "The Kingdom of Bahrain";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["ar"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["ar"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[2];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[8];
    pub const NATIONAL_PREFIX: &str = "None";
    pub const NATIONALITY: Option<&str> = Some("Bahraini");
    pub const NUMBER: &str = "048";
    pub const POSTAL_CODE: bool = true;
    pub const POSTAL_CODE_FORMAT: Option<&str> = Some("(?:\\d|1[0-2])\\d{2}");
    pub const REGION: Option<Region> = Some(Region::Asia);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::WesternAsia);
    pub const UN_LOCODE: &str = "BH";
    pub const UNOFFICIAL_NAME_LIST: &[&str] =
        &["Bahrain", "ÿßŸÑÿ®ÿ≠ÿ±ŸäŸÜ", "Bahre√Øn", "Bahrein", "„Éê„Éº„É¨„Éº„É≥"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::EMEA;
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Bahrain"),
        ("af", "Bahrein"),
        ("ak", "Bahrain"),
        ("am", "·â£·àÖ·à≥·äï"),
        ("an", "Bahrein"),
        ("ar", "ÿßŸÑÿ®ÿ≠ÿ±ŸäŸÜ"),
        ("as", "‡¶¨\u{9be}‡¶π‡ß∞‡ßá‡¶á‡¶®"),
        ("ay", "Bahrain"),
        ("az", "Bahreyn"),
        ("ba", "Bahrain"),
        ("be", "–ë–∞—Ö—Ä—ç–π–Ω"),
        ("bg", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("bi", "Bahrain"),
        ("bn", "‡¶¨\u{9be}‡¶π‡¶∞‡ßá‡¶á‡¶®"),
        ("bn_IN", "‡¶¨\u{9be}‡¶π‡¶∞‡ßá‡¶á‡¶®"),
        ("br", "Bahrein"),
        ("bs", "Bahrein"),
        ("ca", "Bahrain"),
        ("ce", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("ch", "Bahrain"),
        ("cs", "Bahrajn"),
        ("cv", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("cy", "Bahrain"),
        ("da", "Bahrain"),
        ("de", "Bahrain"),
        ("dv", "ﬁÑ\u{7a6}ﬁô\u{7b0}ﬁÉ\u{7a6}ﬁá\u{7a8}ﬁÇ\u{7b0}"),
        ("dz", "‡Ωñ\u{f71}‡ºã‡Ω¢\u{f7a}‡Ωì‡ºç"),
        ("ee", "Bahrain"),
        ("el", "ŒúœÄŒ±œáœÅŒ≠ŒπŒΩ"),
        ("en", "Bahrain"),
        ("eo", "Barejno"),
        ("es", "Bar√©in"),
        ("et", "Bahrein"),
        ("eu", "Bahrain"),
        ("fa", "ÿ®ÿ≠ÿ±€åŸÜ"),
        ("ff", "Bahrain"),
        ("fi", "Bahrain"),
        ("fo", "Bahrain"),
        ("fr", "Bahre√Øn"),
        ("fy", "De Barein"),
        ("ga", "Bair√©in"),
        ("gl", "Bahrein"),
        ("gn", "Bahrain"),
        ("gu", "‡™¨‡™π\u{ac7}‡™∞‡™ø‡™®"),
        ("gv", "Bahrain"),
        ("ha", "Baharain"),
        ("he", "◊ë◊ó◊®◊ô◊ô◊ü"),
        ("hi", "‡§¨‡§π‡§∞‡•Ä‡§®"),
        ("hr", "Bahrein"),
        ("ht", "Barayn"),
        ("hu", "Bahrein"),
        ("hy", "‘≤’°’∞÷Ä’•’µ’∂"),
        ("ia", "Bahrein"),
        ("id", "Bahrain"),
        ("io", "Bahrain"),
        ("is", "Barein"),
        ("it", "Bahrein"),
        ("iu", "Bahrain"),
        ("ja", "„Éê„Éº„É¨„Éº„É≥"),
        ("ka", "·Éë·Éê·É∞·É†·Éî·Éò·Éú·Éò"),
        ("ki", "Bahrain"),
        ("kk", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("kl", "Bahrain"),
        ("km", "·ûî·û∂·ûö\u{17c9}·üÇ·ûì"),
        ("kn", "‡≤¨‡≤π‡≤∞‡≥à‡≤®\u{ccd}"),
        ("ko", "Î∞îÎ†àÏù∏"),
        ("ku", "Bahray√Æn"),
        ("kv", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("kw", "Bahreyn"),
        ("ky", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("lo", "Bahrain"),
        ("lt", "Bahreinas"),
        ("lv", "Bahreina"),
        ("mi", "Bahrain"),
        ("mk", "–ë–∞—Ö—Ä–µ–∏–Ω"),
        ("ml", "‡¥¨‡¥π‡¥±‡µà‡¥®\u{d4d}\u{200d}"),
        ("mn", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("mr", "‡§¨‡§π‡§æ‡§∞‡§ø‡§®"),
        ("ms", "Bahrain"),
        ("mt", "Baƒßrejn"),
        (
            "my",
            "·Äò·Ä¨·Äõ\u{102d}·Äî\u{103a}·Ä∏·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
        ),
        ("na", "Bahrain"),
        ("nb", "Bahrain"),
        ("ne", "‡§¨‡§π‡§∞‡§æ‡§á‡§®"),
        ("nl", "Bahrein"),
        ("nn", "Bahrain"),
        ("nv", "Bahrain"),
        ("oc", "Barein"),
        ("or", "‡¨¨\u{b3e}‡¨π\u{b3e}‡¨∞‡≠Ä‡¨®"),
        ("pa", "‡®¨‡®π‡®ø‡®∞‡®æ‡®®"),
        ("pi", "‡§¨‡§π‡§∞\u{948}‡§®"),
        ("pl", "Bahrajn"),
        ("ps", "ÿ®ÿ≠ÿ±€åŸÜ"),
        ("pt", "Bar√©m"),
        ("pt_BR", "Barein"),
        ("ro", "Bahrein"),
        ("ru", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("rw", "Bahirayini"),
        ("sc", "Bahrein"),
        ("sd", "ÿ®ÿ≠ÿ±ŸäŸÜ"),
        ("si", "‡∂∂‡∑Ñ‡∂ª‡∑ö‡∂±\u{dca}"),
        ("sk", "Bahrajn"),
        ("sl", "Bahrajn"),
        ("so", "Baxrayn"),
        ("sq", "Bahrein"),
        ("sr", "–ë–∞—Ö—Ä–µ–∏–Ω"),
        ("sv", "Bahrain"),
        ("sw", "Bahrain"),
        ("ta", "‡Æ™‡Æπ\u{bcd}‡Æ∞‡ØÜ‡ÆØ‡Æø‡Æ©\u{bcd}"),
        ("te", "‡∞¨‡∞π‡∞∞\u{c3f}‡∞®\u{c4d}"),
        ("tg", "–ë–∞“≥—Ä–∞–π–Ω"),
        ("th", "‡∏ö‡∏≤‡∏´\u{e4c}‡πÄ‡∏£‡∏ô"),
        ("ti", "·â£·àÖ·à¨·äï"),
        ("tk", "Bahre√Ωn"),
        ("tl", "Bahrain"),
        ("tr", "Bahreyn"),
        ("tt", "–ë–∞“ª—Ä–µ–π–Ω"),
        ("ug", "ÿ®€ï⁄æÿ±€ïŸäŸÜ"),
        ("uk", "–ë–∞—Ö—Ä–µ–π–Ω"),
        ("ur", "ÿ®ÿ≠ÿ±€åŸÜ"),
        ("uz", "Bahrayn"),
        ("ve", "Bahrain"),
        ("vi", "Ba-rainh"),
        ("wa", "Bareyn"),
        ("wo", "Bahrayin"),
        ("xh", "Bahrain"),
        ("yo", "B√°h√°r√°√¨n√¨"),
        ("zh_CN", "Â∑¥Êûó"),
        ("zh_HK", "Â∑¥Êûó"),
        ("zh_TW", "Â∑¥Êûó"),
        ("zu", "Bahrain"),
    ];
    #[cfg(all(feature = "bh", feature = "geo", feature = "constants"))]
    /// GEO data as constants
    pub mod geo {
        pub const LATITUDE: f64 = 26.0667;
        pub const LONGITUDE: f64 = 50.5577;
        pub const MAX_LATITUDE: f64 = 26.3469001;
        pub const MAX_LONGITUDE: f64 = 50.8509064;
        pub const MIN_LATITUDE: f64 = 25.5349999;
        pub const MIN_LONGITUDE: f64 = 50.324246;
        pub const NORTHEAST_LATITUDE: f64 = 26.3469001;
        pub const NORTHEAST_LONGITUDE: f64 = 50.8509064;
        pub const SOUTHWEST_LATITUDE: f64 = 25.5349999;
        pub const SOUTHWEST_LONGITUDE: f64 = 50.324246;
    }
}
#[cfg(all(feature = "bh", feature = "geo"))]
/// GEO module for this country.
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    /// GEO information for this country.
    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: 26.0667,
            longitude: 50.5577,
            max_latitude: 26.3469001,
            max_longitude: 50.8509064,
            min_latitude: 25.5349999,
            min_longitude: 50.324246,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: 26.3469001,
                    longitude: 50.8509064,
                },
                southwest: CountryGeoBound {
                    latitude: 25.5349999,
                    longitude: 50.324246,
                },
            },
        }
    }
}

#[cfg(all(feature = "bh", feature = "subdivisions"))]
/// Subdivision module for this country.
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    /// Subdivisions for this country.
    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([
            (
                "13",
                Subdivision {
                    name: "Al Manamah (Al ‚ÄòAsimah)",
                    country_alpha2: Alpha2::BH,
                    code: "13",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(26.2285161),
                        longitude: Some(50.5860497),
                        max_latitude: Some(26.247324),
                        min_latitude: Some(26.1945071),
                        max_longitude: Some(50.6259022),
                        min_longitude: Some(50.51370679999999),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Governorate,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖÿ≠ÿßŸÅÿ∏ÿ© ÿßŸÑÿπÿßÿµŸÖÿ©"),
                        ("bg", "–°—Ç–æ–ª–∏—á–Ω–∞ –ø—Ä–æ–≤–∏–Ω—Ü–∏—è"),
                        ("ca", "Governaci√≥ de la Capital"),
                        ("ccp", "ëÑá\u{11133}ëÑ†ëÑõ\u{11128}ëÑëëÑ£\u{11134}"),
                        ("ceb", "Capital Governorate"),
                        ("de", "Hauptstadt-Gouvernement"),
                        ("en", "Capital"),
                        ("es", "Capital"),
                        ("eu", "Hiriburuaren eskualdea"),
                        ("fa", "ÿßÿ≥ÿ™ÿßŸÜ ÿπÿßÿµŸÖŸá"),
                        ("fr", "Gouvernorat de la capitale"),
                        ("hu", "F≈ëv√°ros korm√°nyz√≥s√°g"),
                        ("id", "Kegubernuran Ibu Kota"),
                        ("it", "Governatorato della Capitale"),
                        ("ja", "È¶ñÈÉΩÁúå"),
                        ("ko", "ÏàòÎèÑ Ï£º"),
                        ("lt", "Sostinƒós muchafaza"),
                        ("nb", "Hovedstadsguvernementet"),
                        ("nl", "Hoofdstad"),
                        ("no", "Hovedstadsguvernementet"),
                        ("pl", "Muhafazat al-Asima"),
                        ("ps", "ŸÖÿ≠ÿßŸÅÿ∏Ÿá ŸæŸÑÿßÿ≤ŸÖ€êŸÜŸá(ÿ®ÿ≠ÿ±ŸäŸÜ)"),
                        ("pt", "Prov√≠ncia da Capital"),
                        ("ru", "–°—Ç–æ–ª–∏—á–Ω–∞—è –º—É—Ö–∞—Ñ–∞–∑–∞"),
                        ("sv", "Capital Governorate"),
                        ("uk", "–°—Ç–æ–ª–∏—á–Ω–∞ –º—É—Ö–∞—Ñ–∞–∑–∞"),
                        ("ur", "ŸÖÿ≠ÿßŸÅÿ∏€Å ÿØÿßÿ±ÿßŸÑÿ≠⁄©ŸàŸÖÿ™ÿå ÿ®ÿ≠ÿ±€åŸÜ"),
                        ("zh", "È¶ñÈÉΩÁúÅ"),
                    ]),
                    unofficial_name_list: ["Manama", "Manama", "Manama", "ManƒÅmah", "al-ManƒÅmah"]
                        .to_vec(),
                },
            ),
            (
                "14",
                Subdivision {
                    name: "Al Janubiyah",
                    country_alpha2: Alpha2::BH,
                    code: "14",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(25.9381018),
                        longitude: Some(50.5756887),
                        max_latitude: Some(26.138158),
                        min_latitude: Some(25.5798401),
                        max_longitude: Some(50.8223101),
                        min_longitude: Some(50.4545967),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Governorate,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ¨ŸÜŸàÿ®Ÿäÿ©"),
                        ("bg", "–Æ–∂–Ω–∞ –ø—Ä–æ–≤–∏–Ω—Ü–∏—è"),
                        ("ca", "Governaci√≥ del Sud"),
                        ("ccp", "ëÑ•ëÑÖ\u{1112a}ëÑòëÑ¢\u{11133}ëÑö\u{11134}"),
                        ("ceb", "Southern Governorate"),
                        ("en", "Southern"),
                        ("es", "Sur"),
                        ("eu", "Hegoaldeko eskualdea"),
                        ("fa", "ÿ¨ŸÜŸàÿ®€åŸá"),
                        ("fr", "Gouvernorat m√©ridional"),
                        ("hu", "D√©li korm√°nyz√≥s√°g"),
                        ("hy", "’Ä’°÷Ä’°’æ’°’µ’´’∂ ’¥’∏÷Ç’∞’°÷Ü’°’¶’°"),
                        ("id", "Kegubernuran Selatan"),
                        ("it", "Governatorato Meridionale"),
                        ("ja", "ÂçóÈÉ®Áúå"),
                        ("ko", "ÎÇ®Î∂Ä Ï£º"),
                        ("lt", "Piet≈≥ muchafaza"),
                        ("nb", "S√∏rlige guvernement"),
                        ("nl", "Zuid"),
                        ("no", "S√∏rlige guvernement"),
                        ("pl", "Al-Muhafazat al-D≈ºanubijja"),
                        ("ps", "ŸÖÿ≠ÿßŸÅÿ∏Ÿá ÿ¨ŸÜŸàÿ®ŸäŸá"),
                        ("pt", "Prov√≠ncia do Sul"),
                        ("ru", "–Æ–∂–Ω–∞—è –º—É—Ö–∞—Ñ–∞–∑–∞"),
                        ("sv", "Southern Governorate"),
                        ("tr", "G√ºney Valiliƒüi"),
                        ("ur", "ŸÖÿ≠ÿßŸÅÿ∏€Å ÿ¨ŸÜŸàÿ®€å€Å"),
                        ("zh", "ÂçóÊñπÁúÅ"),
                    ]),
                    unofficial_name_list: [
                        "Eastern",
                        "Hawa",
                        "Juzur H\u{328}awƒÅr",
                        "Southern",
                        "ash Sharqiyah",
                        "a≈°-≈†arqƒ´yah",
                    ]
                    .to_vec(),
                },
            ),
            (
                "15",
                Subdivision {
                    name: "Al Muharraq",
                    country_alpha2: Alpha2::BH,
                    code: "15",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(26.266941),
                        longitude: Some(50.63839),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Governorate,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖÿ≠ÿßŸÅÿ∏ÿ© ÿßŸÑŸÖÿ≠ÿ±ŸÇ"),
                        ("bg", "–ú—É—Ö–∞—Ä–∞–∫"),
                        ("bn", "‡¶Æ\u{9c1}‡¶π\u{9be}‡¶∞‡¶∞\u{9be}‡¶ï ‡¶ó‡¶≠‡¶∞\u{9cd}‡¶®‡ßã‡¶∞‡ßá‡¶ü"),
                        ("ca", "Governaci√≥ d‚Äôal-Muharraq"),
                        ("ccp", "ëÑü\u{1112a}ëÑ¶ëÑ¢ëÑá\u{11134}"),
                        ("ceb", "Muharraq Governorate"),
                        ("da", "Muharraq Governorate"),
                        ("de", "Gouvernement Muharraq"),
                        ("el", "ŒúŒøœÖœáŒ±œÅŒ¨Œ∫"),
                        ("en", "Muharraq"),
                        ("es", "Muharraq"),
                        ("eu", "Muharraq eskualdea"),
                        ("fa", "ÿßÿ≥ÿ™ÿßŸÜ ŸÖÿ≠ÿ±ŸÇ"),
                        ("fi", "Muharraqn kuvernoraatti"),
                        ("fr", "Gouvernorat de Muharraq"),
                        ("gu", "‡™Æ\u{ac1}‡™π‡™æ‡™∞‡™ï ‡™ó‡™µ‡™∞\u{acd}‡™®‡´ã‡™∞\u{ac7}‡™ü"),
                        ("hi", "‡§Æ\u{941}‡§π‡§∞‡§ï ‡§ó‡§µ‡§∞\u{94d}‡§®‡§∞\u{947}‡§ü"),
                        ("hu", "Muharrak korm√°nyz√≥s√°g"),
                        ("id", "Kegubernuran Al Muharraq"),
                        ("it", "Governatorato di Muharraq"),
                        ("ja", "„É†„Éè„ÉÉ„É©„ÇØÁúå"),
                        ("kn", "‡≤Æ‡≥Å‡≤π‡≤∞‡≤æ‡≤ï\u{ccd} ‡≤ó‡≤µ‡≤∞\u{ccd}‡≤®‡≥á‡≤ü\u{ccd}"),
                        ("ko", "Î¨¥ÌïòÎùºÌÅ¨ Ï£º"),
                        ("lt", "Muharako muchafaza"),
                        ("lv", "Muharrakas muhƒÅfaza"),
                        ("mr", "‡§Æ\u{941}‡§π‡§∞‡§ï ‡§ó‡§µ\u{94d}‡§π‡§∞\u{94d}‡§®‡•ã‡§∞\u{947}‡§ü"),
                        ("ms", "Pentadbiran Al Muharraq"),
                        ("nb", "Muharraq guvernement"),
                        ("nl", "Muharraq Governorate"),
                        ("no", "Muharraq guvernement"),
                        ("pl", "Muhafazat al-Muharrak"),
                        ("ps", "ŸÖÿ≠ÿßŸÅÿ∏Ÿá ŸÖÿ≠ÿ±ŸÇ"),
                        ("pt", "Prov√≠ncia de Muharraq"),
                        ("ru", "–ú—É—Ö–∞—Ä—Ä–∞–∫"),
                        ("si", "‡∂∏\u{dd4}‡∑Ñ‡∂ª‡∂ö\u{dca} ‡∂¥‡∑Ö\u{dcf}‡∂≠"),
                        ("sv", "Muharraq Governorate"),
                        ("ta", "‡ÆÆ‡ØÅ‡Æπ‡Æ∞\u{bcd}‡Æ∞‡Æï\u{bcd} ‡Æï‡Øã‡Æµ‡ØÜ‡Æ∞\u{bcd}‡Æ©‡Øã‡Æ∞‡Øá"),
                        (
                            "te",
                            "‡∞Æ‡±Å‡∞π\u{c3e}‡∞∞\u{c4d}‡∞∞‡∞ï\u{c4d} ‡∞ó‡∞µ‡∞∞\u{c4d}‡∞®‡∞∞\u{c47}‡∞ü\u{c4d}",
                        ),
                        ("th", "‡πÄ‡∏Ç‡∏ï‡∏°\u{e38}‡∏Æ\u{e31}‡∏£‡∏£\u{e47}‡∏≠‡∏Å"),
                        ("tr", "Muharraq Y√∂netimi"),
                        ("uk", "–ú—É–Ω—ñ—Ü–∏–ø–∞–ª—ñ—Ç–µ—Ç –ú—É—Ö–∞—Ä—Ä–∞–∫"),
                        ("ur", "ŸÖÿ≠ÿßŸÅÿ∏€Å ŸÖÿ≠ÿ±ŸÇ"),
                        ("vi", "T·ªânh Muharraq"),
                        ("zh", "Á©ÜÂìàÊãâÊ†ºÁúÅ"),
                    ]),
                    unofficial_name_list: ["Al Muharraq"].to_vec(),
                },
            ),
            (
                "17",
                Subdivision {
                    name: "Ash Shamaliyah",
                    country_alpha2: Alpha2::BH,
                    code: "17",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(26.1551914),
                        longitude: Some(50.4825173),
                        max_latitude: Some(26.235592),
                        min_latitude: Some(26.04768),
                        max_longitude: Some(50.5664624),
                        min_longitude: Some(50.3788254),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Governorate,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ¥ŸÖÿßŸÑŸäÿ©"),
                        ("bg", "–°–µ–≤–µ—Ä–Ω–∞ –ø—Ä–æ–≤–∏–Ω—Ü–∏—è"),
                        ("ca", "Governaci√≥ del Nord"),
                        ("ccp", "ëÑö\u{11127}ëÑ¢\u{11134}ëÑòëÑ¢\u{11133}ëÑö\u{11134}"),
                        ("ceb", "Northern Governorate"),
                        ("en", "Northern"),
                        ("es", "Norte"),
                        ("eu", "Iparraldeko eskualdea"),
                        ("fa", "ÿ¥ŸÖÿßŸÑ€åŸá"),
                        ("fr", "Gouvernorat septentrional"),
                        ("hu", "√âszaki korm√°nyz√≥s√°g"),
                        ("id", "Kegubernuran Utara"),
                        ("it", "Governatorato Settentrionale"),
                        ("ja", "ÂåóÈÉ®Áúå („Éê„Éº„É¨„Éº„É≥)"),
                        ("ko", "Î∂ÅÎ∂Ä Ï£º"),
                        ("lt", "≈†iaurƒós muchafaza"),
                        ("nb", "Nordlige guvernement"),
                        ("nl", "Noord"),
                        ("no", "Nordlige guvernement"),
                        ("pl", "Al-Muhafazat asz-Szimalijja"),
                        ("ps", "ŸÖÿ≠ÿßŸÅÿ∏Ÿá ÿ¥ŸÖÿßŸÑŸäŸá"),
                        ("pt", "Prov√≠ncia do Norte"),
                        ("ru", "–°–µ–≤–µ—Ä–Ω–∞—è –º—É—Ö–∞—Ñ–∞–∑–∞"),
                        ("sv", "Northern Governorate"),
                        ("tr", "Kuzey Valiliƒüi"),
                        ("ur", "ŸÖÿ≠ÿßŸÅÿ∏€Å ÿ¥ŸÖÿßŸÑ€å€Å"),
                        ("zh", "ÂåóÊñπÁúÅ"),
                    ]),
                    unofficial_name_list: [
                        "Northern",
                        "al-Mintaqa ash Shamaliyah",
                        "ash Shamaliyah",
                    ]
                    .to_vec(),
                },
            ),
        ])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "bh")]
/// [`Country`](crate::Country) struct for this country.
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::BH,
        alpha3: Alpha3::BHR,
        address_format: Some("{{recipient}}\n{{street}}\n{{postalcode}} {{city}}\n{{country}}"),
        continent: Continent::Asia,
        country_code: 973,
        currency_code: CurrencyCode::BHD,
        gec: Some(GEC::BA),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "00",
        ioc: Some(IOC::BRN),
        iso_long_name: "The Kingdom of Bahrain",
        iso_short_name: "Bahrain",
        official_language_list: ["ar"].to_vec(),
        spoken_language_list: ["ar"].to_vec(),
        national_destination_code_length_list: [2].to_vec(),
        national_number_length_list: [8].to_vec(),
        national_prefix: "None",
        nationality: Some("Bahraini"),
        number: "048",
        postal_code: true,
        postal_code_format: Some("(?:\\d|1[0-2])\\d{2}"),
        region: Some(Region::Asia),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::WesternAsia),
        un_locode: "BH",
        unofficial_name_list: ["Bahrain", "ÿßŸÑÿ®ÿ≠ÿ±ŸäŸÜ", "Bahre√Øn", "Bahrein", "„Éê„Éº„É¨„Éº„É≥"].to_vec(),
        world_region: WorldRegion::EMEA,
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Bahrain"),
            ("af", "Bahrein"),
            ("ak", "Bahrain"),
            ("am", "·â£·àÖ·à≥·äï"),
            ("an", "Bahrein"),
            ("ar", "ÿßŸÑÿ®ÿ≠ÿ±ŸäŸÜ"),
            ("as", "‡¶¨\u{9be}‡¶π‡ß∞‡ßá‡¶á‡¶®"),
            ("ay", "Bahrain"),
            ("az", "Bahreyn"),
            ("ba", "Bahrain"),
            ("be", "–ë–∞—Ö—Ä—ç–π–Ω"),
            ("bg", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("bi", "Bahrain"),
            ("bn", "‡¶¨\u{9be}‡¶π‡¶∞‡ßá‡¶á‡¶®"),
            ("bn_IN", "‡¶¨\u{9be}‡¶π‡¶∞‡ßá‡¶á‡¶®"),
            ("br", "Bahrein"),
            ("bs", "Bahrein"),
            ("ca", "Bahrain"),
            ("ce", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("ch", "Bahrain"),
            ("cs", "Bahrajn"),
            ("cv", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("cy", "Bahrain"),
            ("da", "Bahrain"),
            ("de", "Bahrain"),
            ("dv", "ﬁÑ\u{7a6}ﬁô\u{7b0}ﬁÉ\u{7a6}ﬁá\u{7a8}ﬁÇ\u{7b0}"),
            ("dz", "‡Ωñ\u{f71}‡ºã‡Ω¢\u{f7a}‡Ωì‡ºç"),
            ("ee", "Bahrain"),
            ("el", "ŒúœÄŒ±œáœÅŒ≠ŒπŒΩ"),
            ("en", "Bahrain"),
            ("eo", "Barejno"),
            ("es", "Bar√©in"),
            ("et", "Bahrein"),
            ("eu", "Bahrain"),
            ("fa", "ÿ®ÿ≠ÿ±€åŸÜ"),
            ("ff", "Bahrain"),
            ("fi", "Bahrain"),
            ("fo", "Bahrain"),
            ("fr", "Bahre√Øn"),
            ("fy", "De Barein"),
            ("ga", "Bair√©in"),
            ("gl", "Bahrein"),
            ("gn", "Bahrain"),
            ("gu", "‡™¨‡™π\u{ac7}‡™∞‡™ø‡™®"),
            ("gv", "Bahrain"),
            ("ha", "Baharain"),
            ("he", "◊ë◊ó◊®◊ô◊ô◊ü"),
            ("hi", "‡§¨‡§π‡§∞‡•Ä‡§®"),
            ("hr", "Bahrein"),
            ("ht", "Barayn"),
            ("hu", "Bahrein"),
            ("hy", "‘≤’°’∞÷Ä’•’µ’∂"),
            ("ia", "Bahrein"),
            ("id", "Bahrain"),
            ("io", "Bahrain"),
            ("is", "Barein"),
            ("it", "Bahrein"),
            ("iu", "Bahrain"),
            ("ja", "„Éê„Éº„É¨„Éº„É≥"),
            ("ka", "·Éë·Éê·É∞·É†·Éî·Éò·Éú·Éò"),
            ("ki", "Bahrain"),
            ("kk", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("kl", "Bahrain"),
            ("km", "·ûî·û∂·ûö\u{17c9}·üÇ·ûì"),
            ("kn", "‡≤¨‡≤π‡≤∞‡≥à‡≤®\u{ccd}"),
            ("ko", "Î∞îÎ†àÏù∏"),
            ("ku", "Bahray√Æn"),
            ("kv", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("kw", "Bahreyn"),
            ("ky", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("lo", "Bahrain"),
            ("lt", "Bahreinas"),
            ("lv", "Bahreina"),
            ("mi", "Bahrain"),
            ("mk", "–ë–∞—Ö—Ä–µ–∏–Ω"),
            ("ml", "‡¥¨‡¥π‡¥±‡µà‡¥®\u{d4d}\u{200d}"),
            ("mn", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("mr", "‡§¨‡§π‡§æ‡§∞‡§ø‡§®"),
            ("ms", "Bahrain"),
            ("mt", "Baƒßrejn"),
            (
                "my",
                "·Äò·Ä¨·Äõ\u{102d}·Äî\u{103a}·Ä∏·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
            ),
            ("na", "Bahrain"),
            ("nb", "Bahrain"),
            ("ne", "‡§¨‡§π‡§∞‡§æ‡§á‡§®"),
            ("nl", "Bahrein"),
            ("nn", "Bahrain"),
            ("nv", "Bahrain"),
            ("oc", "Barein"),
            ("or", "‡¨¨\u{b3e}‡¨π\u{b3e}‡¨∞‡≠Ä‡¨®"),
            ("pa", "‡®¨‡®π‡®ø‡®∞‡®æ‡®®"),
            ("pi", "‡§¨‡§π‡§∞\u{948}‡§®"),
            ("pl", "Bahrajn"),
            ("ps", "ÿ®ÿ≠ÿ±€åŸÜ"),
            ("pt", "Bar√©m"),
            ("pt_BR", "Barein"),
            ("ro", "Bahrein"),
            ("ru", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("rw", "Bahirayini"),
            ("sc", "Bahrein"),
            ("sd", "ÿ®ÿ≠ÿ±ŸäŸÜ"),
            ("si", "‡∂∂‡∑Ñ‡∂ª‡∑ö‡∂±\u{dca}"),
            ("sk", "Bahrajn"),
            ("sl", "Bahrajn"),
            ("so", "Baxrayn"),
            ("sq", "Bahrein"),
            ("sr", "–ë–∞—Ö—Ä–µ–∏–Ω"),
            ("sv", "Bahrain"),
            ("sw", "Bahrain"),
            ("ta", "‡Æ™‡Æπ\u{bcd}‡Æ∞‡ØÜ‡ÆØ‡Æø‡Æ©\u{bcd}"),
            ("te", "‡∞¨‡∞π‡∞∞\u{c3f}‡∞®\u{c4d}"),
            ("tg", "–ë–∞“≥—Ä–∞–π–Ω"),
            ("th", "‡∏ö‡∏≤‡∏´\u{e4c}‡πÄ‡∏£‡∏ô"),
            ("ti", "·â£·àÖ·à¨·äï"),
            ("tk", "Bahre√Ωn"),
            ("tl", "Bahrain"),
            ("tr", "Bahreyn"),
            ("tt", "–ë–∞“ª—Ä–µ–π–Ω"),
            ("ug", "ÿ®€ï⁄æÿ±€ïŸäŸÜ"),
            ("uk", "–ë–∞—Ö—Ä–µ–π–Ω"),
            ("ur", "ÿ®ÿ≠ÿ±€åŸÜ"),
            ("uz", "Bahrayn"),
            ("ve", "Bahrain"),
            ("vi", "Ba-rainh"),
            ("wa", "Bareyn"),
            ("wo", "Bahrayin"),
            ("xh", "Bahrain"),
            ("yo", "B√°h√°r√°√¨n√¨"),
            ("zh_CN", "Â∑¥Êûó"),
            ("zh_HK", "Â∑¥Êûó"),
            ("zh_TW", "Â∑¥Êûó"),
            ("zu", "Bahrain"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
