// DO NOT TOUCH THIS FILE. (Auto-generated by `keshvar-code-generator/src/countries.rs`)

//! A module for country `The Bailiwick of Jersey`

#[cfg(all(feature = "je", feature = "constants"))]
/// A module to access all constant country data for `The Bailiwick of Jersey`.
///
/// Note that to use this module, `constant` feature should be enabled.
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> = None;
    pub const ALPHA2: Alpha2 = Alpha2::JE;
    pub const ALPHA3: Alpha3 = Alpha3::JEY;
    pub const CONTINENT: Continent = Continent::Europe;
    pub const COUNTRY_CODE: usize = 44;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::GBP;
    pub const GEC: Option<GEC> = Some(GEC::JE);
    pub const INTERNATIONAL_PREFIX: &str = "";
    pub const IOC: Option<IOC> = None;
    pub const ISO_SHORT_NAME: &str = "Jersey";
    pub const ISO_LONG_NAME: &str = "The Bailiwick of Jersey";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["en", "fr"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["en", "fr"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[];
    pub const NATIONAL_PREFIX: &str = "";
    pub const NATIONALITY: Option<&str> = Some("Channel Islander");
    pub const NUMBER: &str = "832";
    pub const POSTAL_CODE: bool = true;
    pub const POSTAL_CODE_FORMAT: Option<&str> = Some("JE\\d[\\dA-Z]? ?\\d[ABD-HJLN-UW-Z]{2}");
    pub const REGION: Option<Region> = Some(Region::Europe);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::NorthernEurope);
    pub const UN_LOCODE: &str = "JE";
    pub const UNOFFICIAL_NAME_LIST: &[&str] = &["Jersey", "„Ç∏„É£„Éº„Ç∏„Éº"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::EMEA;
    #[cfg(feature = "emojis")]
    pub const EMOJI: &str = "üáØüá™";
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Jersey"),
        ("af", "Jersey"),
        ("ak", "Jersey"),
        ("am", "Jersey"),
        ("an", "Jersey"),
        ("ar", "ÿ¨Ÿäÿ±ÿ≥Ÿä"),
        ("as", "‡¶ú\u{9be}‡ß∞\u{9cd}‡¶ö‡ßÄ"),
        ("ay", "Jersey"),
        ("az", "Jersey"),
        ("ba", "Jersey"),
        ("be", "–î–∂—ç—Ä—Å—ñ"),
        ("bg", "–î–∂—ä—Ä—Å–∏"),
        ("bi", "Jersey"),
        ("bn", "‡¶ú\u{9be}‡¶∞\u{9cd}‡¶∏‡¶ø"),
        ("bn_IN", "‡¶ú\u{9be}‡¶∞\u{9cd}‡¶∏‡¶ø"),
        ("br", "Jerzenez"),
        ("bs", "D≈æerzi"),
        ("ca", "Jersey"),
        ("ce", "Jersey"),
        ("ch", "Jersey"),
        ("cs", "Jersey"),
        ("cv", "Jersey"),
        ("cy", "Jersey"),
        ("da", "Jersey"),
        ("de", "Jersey"),
        ("dv", "ﬁñ\u{7a7}ﬁê\u{7ad}"),
        ("dz", "‡Ωá‡Ω¢‡ºã‡Ω¶\u{f72}‡ºç"),
        ("ee", "Jersey"),
        ("el", "Œ§Œ∂Œ≠œÅœÉŒµœä"),
        ("en", "Jersey"),
        ("eo", "ƒ¥erzejo"),
        ("es", "Jersey"),
        ("et", "Jersey"),
        ("eu", "Jersey"),
        ("fa", "ÿ¨ÿ±ÿ≥€å"),
        ("ff", "Jersey"),
        ("fi", "Jersey"),
        ("fo", "Jersey"),
        ("fr", "Jersey"),
        ("fy", "Jersey"),
        ("ga", "Geirs√≠"),
        ("gl", "Jersey"),
        ("gn", "Jersey"),
        ("gu", "‡™ú‡™∞\u{acd}‡™∏‡´Ä"),
        ("gv", "Jersee"),
        ("ha", "Jersey"),
        ("he", "◊í'◊®◊ñ◊ô"),
        ("hi", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
        ("hr", "Jersey"),
        ("ht", "Jersey"),
        ("hu", "Jersey"),
        ("hy", "’ã’•÷Ä’Ω’´"),
        ("ia", "Jersey"),
        ("id", "Jersey"),
        ("io", "Jersey"),
        ("is", "Jersey"),
        ("it", "Jersey"),
        ("iu", "Jersey"),
        ("ja", "„Ç∏„É£„Éº„Ç∏„Éº"),
        ("ka", "·ÉØ·Éî·É†·É°·Éò"),
        ("ki", "Jersey"),
        ("kk", "–î–∂–µ—Ä—Å–∏"),
        ("kl", "Jersey"),
        ("km", "Jersey"),
        ("kn", "‡≤ú‡≤∞\u{ccd}‡≤∏\u{cbf}"),
        ("ko", "Ï†ÄÏßÄ ÏÑ¨"),
        ("ku", "Jersey"),
        ("kv", "Jersey"),
        ("kw", "Jersi"),
        ("ky", "–î–∂–µ—Ä—Å–∏"),
        ("lo", "Jersey"),
        ("lt", "D≈æersis"),
        ("lv", "D≈æersija"),
        ("mi", "T≈çrehe"),
        ("mk", "–è–µ—Ä—Å–∏"),
        ("ml", "‡¥ú‡µÜ‡¥∞\u{d4d}\u{200d}‡¥∏‡¥ø"),
        ("mn", "Jersey"),
        ("mr", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
        ("ms", "Jersey"),
        ("mt", "Jersey"),
        ("my", "Jersey"),
        ("na", "Jersey"),
        ("nb", "Jersey"),
        ("ne", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
        ("nl", "Jersey"),
        ("nn", "Jersey"),
        ("nv", "Jersey"),
        ("oc", "Jersei"),
        ("or", "‡¨ú‡¨∞\u{b4d}‡¨∏‡≠Ä"),
        ("pa", "‡®ú‡®∞‡®∏‡©Ä"),
        ("pi", "Jersey"),
        ("pl", "Jersey"),
        ("ps", "Jersey"),
        ("pt", "Jersey"),
        ("pt_BR", "Jersey"),
        ("ro", "Jersey"),
        ("ru", "–î–∂–µ—Ä—Å–∏"),
        ("rw", "Jersey"),
        ("sc", "Jersey"),
        ("sd", "Jersey"),
        ("si", "‡∂¢‡∂ª\u{dca}‡∑É\u{dd2}"),
        ("sk", "Jersey"),
        ("sl", "Jersey"),
        ("so", "Jersey"),
        ("sq", "Xhersi"),
        ("sr", "–è–µ—Ä—Å–∏"),
        ("sv", "Jersey"),
        ("sw", "Jersey"),
        ("ta", "‡Æú‡ØÜ‡Æ∞\u{bcd}‡Æö‡Æø"),
        ("te", "‡∞ú‡∞∞\u{c4d}‡∞∏\u{c40}"),
        ("tg", "“∂–µ—Ä—Å–∏"),
        ("th", "‡πÄ‡∏à‡∏≠‡∏£\u{e4c}‡∏ã\u{e35}‡∏¢\u{e4c}"),
        ("ti", "Jersey"),
        ("tk", "Jersi"),
        ("tl", "Jersey"),
        ("tr", "Jersey"),
        ("tt", "Jersey"),
        ("ug", "ÿ¨€êÿ±ÿ≥€êŸä"),
        ("uk", "–î–∂–µ—Ä—Å—ñ"),
        ("ur", "ÿ¨ÿ±ÿ≤€å"),
        ("uz", "Jersey"),
        ("ve", "Jersey"),
        ("vi", "Gi∆°-x·ªã"),
        ("wa", "Djersey"),
        ("wo", "Jersey"),
        ("xh", "Jersey"),
        ("yo", "Jersey"),
        ("zh_CN", "Ê≥ΩË•øÂ≤õ"),
        ("zh_HK", "Êæ§Ë•ø"),
        ("zh_TW", "Êæ§Ë•øÂ≥∂"),
        ("zu", "Jersey"),
    ];
    #[cfg(all(feature = "je", feature = "geo", feature = "constants"))]
    /// GEO data as constants
    pub mod geo {
        pub const LATITUDE: f64 = 49.214439;
        pub const LONGITUDE: f64 = -2.13125;
        pub const MAX_LATITUDE: f64 = 49.26650009999999;
        pub const MAX_LONGITUDE: f64 = -2.0013001;
        pub const MIN_LATITUDE: f64 = 49.1582;
        pub const MIN_LONGITUDE: f64 = -2.2602001;
        pub const NORTHEAST_LATITUDE: f64 = 49.26650009999999;
        pub const NORTHEAST_LONGITUDE: f64 = -2.0013001;
        pub const SOUTHWEST_LATITUDE: f64 = 49.1582;
        pub const SOUTHWEST_LONGITUDE: f64 = -2.2602001;
    }
}
#[cfg(all(feature = "je", feature = "geo"))]
/// GEO module for this country.
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    /// GEO information for this country.
    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: 49.214439,
            longitude: -2.13125,
            max_latitude: 49.26650009999999,
            max_longitude: -2.0013001,
            min_latitude: 49.1582,
            min_longitude: -2.2602001,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: 49.26650009999999,
                    longitude: -2.0013001,
                },
                southwest: CountryGeoBound {
                    latitude: 49.1582,
                    longitude: -2.2602001,
                },
            },
        }
    }
}

#[cfg(all(feature = "je", feature = "subdivisions"))]
/// Subdivision module for this country.
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    /// Subdivisions for this country.
    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "je")]
/// [`Country`](crate::Country) struct for this country.
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::JE,
        alpha3: Alpha3::JEY,
        address_format: None,
        continent: Continent::Europe,
        country_code: 44,
        currency_code: CurrencyCode::GBP,
        gec: Some(GEC::JE),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "",
        ioc: None,
        iso_long_name: "The Bailiwick of Jersey",
        iso_short_name: "Jersey",
        official_language_list: ["en", "fr"].to_vec(),
        spoken_language_list: ["en", "fr"].to_vec(),
        national_destination_code_length_list: [].to_vec(),
        national_number_length_list: [].to_vec(),
        national_prefix: "",
        nationality: Some("Channel Islander"),
        number: "832",
        postal_code: true,
        postal_code_format: Some("JE\\d[\\dA-Z]? ?\\d[ABD-HJLN-UW-Z]{2}"),
        region: Some(Region::Europe),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::NorthernEurope),
        un_locode: "JE",
        unofficial_name_list: ["Jersey", "„Ç∏„É£„Éº„Ç∏„Éº"].to_vec(),
        world_region: WorldRegion::EMEA,
        #[cfg(feature = "emojis")]
        emoji: "üáØüá™",
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Jersey"),
            ("af", "Jersey"),
            ("ak", "Jersey"),
            ("am", "Jersey"),
            ("an", "Jersey"),
            ("ar", "ÿ¨Ÿäÿ±ÿ≥Ÿä"),
            ("as", "‡¶ú\u{9be}‡ß∞\u{9cd}‡¶ö‡ßÄ"),
            ("ay", "Jersey"),
            ("az", "Jersey"),
            ("ba", "Jersey"),
            ("be", "–î–∂—ç—Ä—Å—ñ"),
            ("bg", "–î–∂—ä—Ä—Å–∏"),
            ("bi", "Jersey"),
            ("bn", "‡¶ú\u{9be}‡¶∞\u{9cd}‡¶∏‡¶ø"),
            ("bn_IN", "‡¶ú\u{9be}‡¶∞\u{9cd}‡¶∏‡¶ø"),
            ("br", "Jerzenez"),
            ("bs", "D≈æerzi"),
            ("ca", "Jersey"),
            ("ce", "Jersey"),
            ("ch", "Jersey"),
            ("cs", "Jersey"),
            ("cv", "Jersey"),
            ("cy", "Jersey"),
            ("da", "Jersey"),
            ("de", "Jersey"),
            ("dv", "ﬁñ\u{7a7}ﬁê\u{7ad}"),
            ("dz", "‡Ωá‡Ω¢‡ºã‡Ω¶\u{f72}‡ºç"),
            ("ee", "Jersey"),
            ("el", "Œ§Œ∂Œ≠œÅœÉŒµœä"),
            ("en", "Jersey"),
            ("eo", "ƒ¥erzejo"),
            ("es", "Jersey"),
            ("et", "Jersey"),
            ("eu", "Jersey"),
            ("fa", "ÿ¨ÿ±ÿ≥€å"),
            ("ff", "Jersey"),
            ("fi", "Jersey"),
            ("fo", "Jersey"),
            ("fr", "Jersey"),
            ("fy", "Jersey"),
            ("ga", "Geirs√≠"),
            ("gl", "Jersey"),
            ("gn", "Jersey"),
            ("gu", "‡™ú‡™∞\u{acd}‡™∏‡´Ä"),
            ("gv", "Jersee"),
            ("ha", "Jersey"),
            ("he", "◊í'◊®◊ñ◊ô"),
            ("hi", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
            ("hr", "Jersey"),
            ("ht", "Jersey"),
            ("hu", "Jersey"),
            ("hy", "’ã’•÷Ä’Ω’´"),
            ("ia", "Jersey"),
            ("id", "Jersey"),
            ("io", "Jersey"),
            ("is", "Jersey"),
            ("it", "Jersey"),
            ("iu", "Jersey"),
            ("ja", "„Ç∏„É£„Éº„Ç∏„Éº"),
            ("ka", "·ÉØ·Éî·É†·É°·Éò"),
            ("ki", "Jersey"),
            ("kk", "–î–∂–µ—Ä—Å–∏"),
            ("kl", "Jersey"),
            ("km", "Jersey"),
            ("kn", "‡≤ú‡≤∞\u{ccd}‡≤∏\u{cbf}"),
            ("ko", "Ï†ÄÏßÄ ÏÑ¨"),
            ("ku", "Jersey"),
            ("kv", "Jersey"),
            ("kw", "Jersi"),
            ("ky", "–î–∂–µ—Ä—Å–∏"),
            ("lo", "Jersey"),
            ("lt", "D≈æersis"),
            ("lv", "D≈æersija"),
            ("mi", "T≈çrehe"),
            ("mk", "–è–µ—Ä—Å–∏"),
            ("ml", "‡¥ú‡µÜ‡¥∞\u{d4d}\u{200d}‡¥∏‡¥ø"),
            ("mn", "Jersey"),
            ("mr", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
            ("ms", "Jersey"),
            ("mt", "Jersey"),
            ("my", "Jersey"),
            ("na", "Jersey"),
            ("nb", "Jersey"),
            ("ne", "‡§ú‡§∞\u{94d}‡§∏‡•Ä"),
            ("nl", "Jersey"),
            ("nn", "Jersey"),
            ("nv", "Jersey"),
            ("oc", "Jersei"),
            ("or", "‡¨ú‡¨∞\u{b4d}‡¨∏‡≠Ä"),
            ("pa", "‡®ú‡®∞‡®∏‡©Ä"),
            ("pi", "Jersey"),
            ("pl", "Jersey"),
            ("ps", "Jersey"),
            ("pt", "Jersey"),
            ("pt_BR", "Jersey"),
            ("ro", "Jersey"),
            ("ru", "–î–∂–µ—Ä—Å–∏"),
            ("rw", "Jersey"),
            ("sc", "Jersey"),
            ("sd", "Jersey"),
            ("si", "‡∂¢‡∂ª\u{dca}‡∑É\u{dd2}"),
            ("sk", "Jersey"),
            ("sl", "Jersey"),
            ("so", "Jersey"),
            ("sq", "Xhersi"),
            ("sr", "–è–µ—Ä—Å–∏"),
            ("sv", "Jersey"),
            ("sw", "Jersey"),
            ("ta", "‡Æú‡ØÜ‡Æ∞\u{bcd}‡Æö‡Æø"),
            ("te", "‡∞ú‡∞∞\u{c4d}‡∞∏\u{c40}"),
            ("tg", "“∂–µ—Ä—Å–∏"),
            ("th", "‡πÄ‡∏à‡∏≠‡∏£\u{e4c}‡∏ã\u{e35}‡∏¢\u{e4c}"),
            ("ti", "Jersey"),
            ("tk", "Jersi"),
            ("tl", "Jersey"),
            ("tr", "Jersey"),
            ("tt", "Jersey"),
            ("ug", "ÿ¨€êÿ±ÿ≥€êŸä"),
            ("uk", "–î–∂–µ—Ä—Å—ñ"),
            ("ur", "ÿ¨ÿ±ÿ≤€å"),
            ("uz", "Jersey"),
            ("ve", "Jersey"),
            ("vi", "Gi∆°-x·ªã"),
            ("wa", "Djersey"),
            ("wo", "Jersey"),
            ("xh", "Jersey"),
            ("yo", "Jersey"),
            ("zh_CN", "Ê≥ΩË•øÂ≤õ"),
            ("zh_HK", "Êæ§Ë•ø"),
            ("zh_TW", "Êæ§Ë•øÂ≥∂"),
            ("zu", "Jersey"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
