// DO NOT TOUCH THIS FILE. (Auto-generated by `keshvar-code-generator/src/countries.rs`)

//! A module for country `The Republic of the Niger`

#[cfg(all(feature = "ne", feature = "constants"))]
/// A module to access all constant country data for `The Republic of the Niger`.
///
/// Note that to use this module, `constant` feature should be enabled.
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> = None;
    pub const ALPHA2: Alpha2 = Alpha2::NE;
    pub const ALPHA3: Alpha3 = Alpha3::NER;
    pub const CONTINENT: Continent = Continent::Africa;
    pub const COUNTRY_CODE: usize = 227;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::XOF;
    pub const GEC: Option<GEC> = Some(GEC::NG);
    pub const INTERNATIONAL_PREFIX: &str = "00";
    pub const IOC: Option<IOC> = Some(IOC::NIG);
    pub const ISO_SHORT_NAME: &str = "Niger";
    pub const ISO_LONG_NAME: &str = "The Republic of the Niger";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["fr"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["fr"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[2];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[8];
    pub const NATIONAL_PREFIX: &str = "0";
    pub const NATIONALITY: Option<&str> = Some("Nigerian");
    pub const NUMBER: &str = "562";
    pub const POSTAL_CODE: bool = true;
    pub const POSTAL_CODE_FORMAT: Option<&str> = Some("\\d{4}");
    pub const REGION: Option<Region> = Some(Region::Africa);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::WesternAfrica);
    pub const UN_LOCODE: &str = "NE";
    pub const UNOFFICIAL_NAME_LIST: &[&str] = &["Niger", "N√≠ger", "„Éã„Ç∏„Çß„Éº„É´"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::EMEA;
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Niger"),
        ("af", "Niger"),
        ("ak", "Niger"),
        ("am", "·äí·åÑ·à≠"),
        ("an", "Niger"),
        ("ar", "ÿßŸÑŸÜ\u{651}Ÿäÿ¨ÿ±"),
        ("as", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡ß∞"),
        ("ay", "Niger"),
        ("az", "Niger"),
        ("ba", "Niger"),
        ("be", "–ù—ñ–≥–µ—Ä"),
        ("bg", "–ù–∏–≥–µ—Ä"),
        ("bi", "Niger"),
        ("bn", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡¶∞"),
        ("bn_IN", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡¶∞"),
        ("br", "Niger"),
        ("bs", "Niger"),
        ("ca", "N√≠ger"),
        ("ce", "–ù–∏–≥–µ—Ä"),
        ("ch", "Niger"),
        ("cs", "Niger"),
        ("cv", "–ù–∏–≥–µ—Ä"),
        ("cy", "Niger"),
        ("da", "Niger"),
        ("de", "Niger"),
        ("dv", "ﬁÇ\u{7a9}ﬁñ\u{7a6}ﬁÉ\u{7aa}"),
        ("dz", "‡Ωì‡Ω†\u{f72}‡ºã‡Ωá‡Ω¢‡ºç"),
        ("ee", "Niger"),
        ("el", "ŒùŒØŒ≥Œ∑œÅŒ±œÇ"),
        ("en", "Niger"),
        ("eo", "Niƒùero"),
        ("es", "Niger"),
        ("et", "Niger"),
        ("eu", "Niger"),
        ("fa", "ŸÜ€åÿ¨ÿ±"),
        ("ff", "Niiser"),
        ("fi", "Niger"),
        ("fo", "Niger"),
        ("fr", "Niger"),
        ("fy", "Niger"),
        ("ga", "An N√≠gir"),
        ("gl", "N√≠xer"),
        ("gn", "Niger"),
        ("gu", "‡™®‡™æ‡™á‡™ú‡™∞"),
        ("gv", "Yn Neegeyr"),
        ("ha", "Nijar"),
        ("he", "◊†◊ô◊ñ◊≥◊®"),
        ("hi", "‡§®‡§æ‡§á‡§ú‡§∞"),
        ("hr", "Niger"),
        ("ht", "Nij√®"),
        ("hu", "Niger"),
        ("hy", "’Ü’´’£’•÷Ä"),
        ("ia", "Niger"),
        ("id", "Niger"),
        ("io", "Nijer"),
        ("is", "N√≠ger"),
        ("it", "Niger"),
        ("iu", "Niger"),
        ("ja", "„Éã„Ç∏„Çß„Éº„É´"),
        ("ka", "·Éú·Éò·Éí·Éî·É†·Éò"),
        ("ki", "Niger"),
        ("kk", "–ù–∏–≥–µ—Ä"),
        ("kl", "Niger"),
        ("km", "·ûì\u{17b8}·û†\u{17d2}·ûü·üÅ·ûö"),
        ("kn", "‡≤®‡≥à‡≤ú‡≤∞\u{ccd}"),
        ("ko", "ÎãàÏ†úÎ•¥"),
        ("ku", "N√Æjer"),
        ("kv", "Niger"),
        ("kw", "Pow Nijer"),
        ("ky", "–ù–∏–≥–µ—Ä"),
        ("lo", "Niger"),
        ("lt", "Nigeris"),
        ("lv", "Nigƒìra"),
        ("mi", "Niger"),
        ("mk", "–ù–∏–≥–µ—Ä"),
        ("ml", "‡¥®‡µà‡¥ú‡¥∞\u{d4d}\u{200d}"),
        ("mn", "–ù–∏–≥–µ—Ä"),
        ("mr", "‡§®‡§æ‡§Ø‡§ú\u{947}‡§∞"),
        ("ms", "Niger"),
        ("mt", "Niƒ°er"),
        (
            "my",
            "·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÇ·Äª·Ä¨·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
        ),
        ("na", "Niger"),
        ("nb", "Niger"),
        ("ne", "‡§®‡§ø‡§ó‡§∞"),
        ("nl", "Niger"),
        ("nn", "Niger"),
        ("nv", "Niger"),
        ("oc", "Nig√®r"),
        ("or", "‡¨®\u{b3e}‡¨á‡¨ú‡¨∞"),
        ("pa", "‡®®‡©Ä‡®ú\u{a3c}‡®∞"),
        ("pi", "‡§®‡•Ä‡§ú\u{947}"),
        ("pl", "Niger"),
        ("ps", "ŸÜÿß€åÿ¨€êÿ±"),
        ("pt", "N√≠ger"),
        ("pt_BR", "N√≠ger"),
        ("ro", "Niger"),
        ("ru", "–ù–∏–≥–µ—Ä"),
        ("rw", "Nigeri"),
        ("sc", "N√¨ger"),
        ("sd", "Niger"),
        ("si", "‡∂±\u{dd2}‡∂ú‡∂ª\u{dca}"),
        ("sk", "Niger"),
        ("sl", "Niger"),
        ("so", "Niger"),
        ("sq", "Niger"),
        ("sr", "–ù–∏–≥–µ—Ä"),
        ("sv", "Niger"),
        ("sw", "Niger"),
        ("ta", "‡Æ®‡Øà‡Æï‡Æ∞\u{bcd}"),
        ("te", "‡∞®\u{c48}‡∞ú\u{c46}‡∞∞\u{c4d}"),
        ("tg", "–ù–∏–≥–µ—Ä"),
        ("th", "‡πÑ‡∏ô‡πÄ‡∏à‡∏≠‡∏£\u{e4c}"),
        ("ti", "·äì·ã≠·åÄ·à≠"),
        ("tk", "Niger"),
        ("tl", "Niger"),
        ("tr", "Nijer"),
        ("tt", "–ù–∏g–µ—Ä"),
        ("ug", "ŸÜŸâ⁄Ø€êÿ±"),
        ("uk", "–ù—ñ–≥–µ—Ä"),
        ("ur", "ŸÜÿßÿ¶ÿ¨ÿ±"),
        ("uz", "Niger"),
        ("ve", "Niger"),
        ("vi", "Ni-gie"),
        ("wa", "Nidjer"),
        ("wo", "Nijeer"),
        ("xh", "Niger"),
        ("yo", "N√¨j·∫π\u{300}r"),
        ("zh_CN", "Â∞ºÊó•Â∞î"),
        ("zh_HK", "Â∞ºÊó•Áàæ"),
        ("zh_TW", "Â∞ºÊó•"),
        ("zu", "INayighe"),
    ];
    #[cfg(all(feature = "ne", feature = "geo", feature = "constants"))]
    /// GEO data as constants
    pub mod geo {
        pub const LATITUDE: f64 = 17.607789;
        pub const LONGITUDE: f64 = 8.081666;
        pub const MAX_LATITUDE: f64 = 23.4999997;
        pub const MAX_LONGITUDE: f64 = 15.9990339;
        pub const MIN_LATITUDE: f64 = 11.693756;
        pub const MIN_LONGITUDE: f64 = 0.1617177;
        pub const NORTHEAST_LATITUDE: f64 = 23.4999997;
        pub const NORTHEAST_LONGITUDE: f64 = 15.9990339;
        pub const SOUTHWEST_LATITUDE: f64 = 11.693756;
        pub const SOUTHWEST_LONGITUDE: f64 = 0.1617177;
    }
}
#[cfg(all(feature = "ne", feature = "geo"))]
/// GEO module for this country.
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    /// GEO information for this country.
    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: 17.607789,
            longitude: 8.081666,
            max_latitude: 23.4999997,
            max_longitude: 15.9990339,
            min_latitude: 11.693756,
            min_longitude: 0.1617177,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: 23.4999997,
                    longitude: 15.9990339,
                },
                southwest: CountryGeoBound {
                    latitude: 11.693756,
                    longitude: 0.1617177,
                },
            },
        }
    }
}

#[cfg(all(feature = "ne", feature = "subdivisions"))]
/// Subdivision module for this country.
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    /// Subdivisions for this country.
    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([
            (
                "1",
                Subdivision {
                    name: "Agadez",
                    country_alpha2: Alpha2::NE,
                    code: "1",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(16.966667),
                        longitude: Some(7.983333),
                        max_latitude: Some(16.9894109),
                        min_latitude: Some(16.948514),
                        max_longitude: Some(8.0210101),
                        min_longitude: Some(7.9526987),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿ£ÿ∫ÿßÿØŸäÿ≥"),
                        ("bn", "‡¶Ü‡¶ó\u{9be}‡¶°‡ßá‡¶ú ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Agadez (regi√≥)"),
                        ("ccp", "ëÑÉëÑâëÑìëÑ¨ëÑå\u{11134}"),
                        ("ceb", "Agadez"),
                        ("da", "Agadez (region)"),
                        ("de", "Agadez"),
                        ("el", "ŒëŒ≥Œ∫Œ±ŒΩœÑŒ≠Œ∂"),
                        ("en", "Agadez"),
                        ("es", "Regi√≥n de Agadez"),
                        ("fi", "Agadez (alue)"),
                        ("fr", "Agadez"),
                        ("gu", "‡™Ö‡™ó‡™æ‡™°\u{ac7}‡™ù ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Agadez"),
                        ("ha_NE", "Yankin Agadez"),
                        ("hi", "‡§Ö‡§ó‡§æ‡§°\u{947}‡§ú\u{93c} ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("hr", "Agadez (regija)"),
                        ("id", "Agadez (departemen)"),
                        ("it", "regione di Agadez"),
                        ("ja", "„Ç¢„Ç¨„Éá„ÇπÂ∑û"),
                        ("ka", "·Éê·Éí·Éê·Éì·Éî·É°·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤Ö‡≤ó‡≤°\u{cc6}‡≤ú\u{ccd} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÏïÑÍ∞ÄÎç∞Ï¶à Ï£º"),
                        ("lt", "Agadezo regionas"),
                        ("lv", "Agadesas reƒ£ions"),
                        ("mr", "‡§Ö‡§ó‡§æ‡§°\u{947}‡§ù ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Agadez (wilayah)"),
                        ("nb", "Agadez (region)"),
                        ("nl", "Agadez"),
                        ("no", "Agadez (region)"),
                        ("pl", "Agadez"),
                        ("pt", "Agadez (regi√£o)"),
                        ("ro", "Regiunea Agadez"),
                        ("ru", "–ê–≥–∞–¥–µ—Å (—Ä–µ–≥–∏–æ–Ω)"),
                        ("si", "‡∂Ö‡∂ú‡∂©‡∑ô‡∑É\u{dca} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Agadez (region)"),
                        ("ta", "‡ÆÜ‡Æï\u{bcd}‡Æü‡Øá‡Æ∏\u{bcd} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞Ö‡∞ó\u{c3e}‡∞°\u{c46}‡∞ú\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏≠‡∏∞‡∏Å‡∏≤‡πÄ‡∏î‡∏ã"),
                        ("tr", "Agadez (Nijer b√∂lgesi)"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –ê–≥–∞–¥–µ—Å"),
                        ("ur", "ÿß⁄ØÿßÿØ€åÿ≤ ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Agadez"),
                        ("zh", "ÈòøÂä†Âæ∑ÂÖπÂ§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Agadez"].to_vec(),
                },
            ),
            (
                "2",
                Subdivision {
                    name: "Diffa",
                    country_alpha2: Alpha2::NE,
                    code: "2",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(13.316667),
                        longitude: Some(12.616667),
                        max_latitude: Some(13.3314146),
                        min_latitude: Some(13.3027664),
                        max_longitude: Some(12.6319599),
                        min_longitude: Some(12.6024342),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿØŸäŸÅÿß"),
                        ("bn", "‡¶°‡¶ø‡¶´\u{9be} ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Diffa"),
                        ("ccp", "ëÑì\u{11128}ëÑú\u{11133}ëÑ¶"),
                        ("ceb", "Diffa"),
                        ("da", "Diffa"),
                        ("de", "Diffa"),
                        ("el", "ŒùœÑŒØœÜŒ±"),
                        ("en", "Diffa"),
                        ("es", "Regi√≥n de Diffa"),
                        ("fi", "Diffa"),
                        ("fr", "Diffa"),
                        ("gu", "‡™°‡™ø‡™´‡™æ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Diffa"),
                        ("ha_NE", "Yankin Diffa"),
                        ("hi", "‡§°‡§ø‡§´‡§æ ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("hr", "Diffa"),
                        ("id", "Diffa"),
                        ("it", "regione di Diffa"),
                        ("ja", "„Éá„Ç£„Éï„Ç°Â∑û"),
                        ("ka", "·Éì·Éò·É§·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤°\u{cbf}‡≤´‡≤æ ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÎîîÌåå Ï£º"),
                        ("lt", "Difos regionas"),
                        ("lv", "Difas reƒ£ions"),
                        ("mr", "‡§°‡§ø‡§´\u{94d}‡§´‡§æ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Diffa"),
                        ("nb", "Diffa"),
                        ("nl", "Diffa"),
                        ("no", "Diffa"),
                        ("pl", "Diffa"),
                        ("pt", "Diffa"),
                        ("ro", "Regiunea Diffa"),
                        ("ru", "–î–∏—Ñ—Ñ–∞"),
                        ("si", "‡∂©\u{dd2}‡∑Ü\u{dca}‡∑Ü\u{dcf} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Diffa (region)"),
                        ("ta", "‡Æü‡Æø‡Æ™\u{bcd}‡Æ™‡Æø‡Æ™\u{bbe} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞°\u{c3f}‡∞´\u{c3e} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏î\u{e34}‡∏ü‡∏ü‡∏≤"),
                        ("tr", "Diffa"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –î—ñ—Ñ—Ñ–∞"),
                        ("ur", "ÿØ€åŸÅÿß ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Diffa"),
                        ("zh", "Ëø™Ê≥ïÂ§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Diffa"].to_vec(),
                },
            ),
            (
                "3",
                Subdivision {
                    name: "Dosso",
                    country_alpha2: Alpha2::NE,
                    code: "3",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(13.05),
                        longitude: Some(3.2),
                        max_latitude: Some(13.0693243),
                        min_latitude: Some(13.0239105),
                        max_longitude: Some(3.2271886),
                        min_longitude: Some(3.1782688),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿØŸàÿ≥Ÿà"),
                        ("bg", "–î–æ—Å–æ (—Ä–µ–≥–∏–æ–Ω)"),
                        ("bn", "‡¶°‡¶∏‡ßã ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Dosso"),
                        ("ccp", "ëÑì\u{1112e}ëÑ•\u{1112e}"),
                        ("ceb", "Dosso Region"),
                        ("da", "Dosso"),
                        ("de", "Dosso"),
                        ("el", "ŒùœÑœåœÉœÉŒø"),
                        ("en", "Dosso"),
                        ("es", "Regi√≥n de Dosso"),
                        ("fi", "Dosso"),
                        ("fr", "Dosso"),
                        ("gu", "‡™°‡´ã‡™∏‡´ã ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Dosso"),
                        ("ha_NE", "Yankin Dosso"),
                        ("hi", "‡§°‡•ã‡§∏‡•ã ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("hr", "Dosso"),
                        ("id", "Dosso"),
                        ("it", "regione di Dosso"),
                        ("ja", "„Éâ„ÉÉ„ÇΩÂ∑û"),
                        ("ka", "·Éì·Éù·É°·Éù·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤°‡≥ã‡≤∏\u{ccd}‡≤∏‡≥ã ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÎèÑÏÜå Ï£º"),
                        ("lt", "Doso regionas"),
                        ("lv", "Doso reƒ£ions"),
                        ("mr", "‡§°‡•ã‡§∏‡•ã ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Dosso"),
                        ("nb", "Dosso"),
                        ("nl", "Dosso"),
                        ("no", "Dosso"),
                        ("pl", "Dosso"),
                        ("pt", "Dosso"),
                        ("ro", "Regiunea Dosso"),
                        ("ru", "–î–æ—Å–æ"),
                        ("si", "‡∂Ø‡∑ú‡∑É\u{dca}‡∑É‡∑ù ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Dosso"),
                        ("ta", "‡Æü‡Øä‡Æ∏‡Øã ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞°\u{c4b}‡∞∏\u{c4b} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏î‡∏≠‡∏™‡πÇ‡∏ã"),
                        ("tr", "Dosso"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –î–æ—Å–æ"),
                        ("ur", "ÿØŸàÿ≥Ÿà ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Dosso"),
                        ("zh", "Â§öÁ¥¢Â§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Dosso"].to_vec(),
                },
            ),
            (
                "4",
                Subdivision {
                    name: "Maradi",
                    country_alpha2: Alpha2::NE,
                    code: "4",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(13.483333),
                        longitude: Some(7.1),
                        max_latitude: Some(13.5319182),
                        min_latitude: Some(13.46399),
                        max_longitude: Some(7.128497299999999),
                        min_longitude: Some(7.0772901),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ŸÖÿßÿ±ÿßÿØŸä"),
                        ("bn", "‡¶Æ\u{9be}‡¶∞\u{9be}‡¶°‡¶ø ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Maradi"),
                        ("ccp", "ëÑüëÑ¢ëÑì\u{11128}"),
                        ("ceb", "Maradi"),
                        ("da", "Maradi"),
                        ("de", "Maradi"),
                        ("el", "ŒúŒ±œÅŒ±ŒΩœÑŒØ"),
                        ("en", "Maradi"),
                        ("es", "Regi√≥n de Maradi"),
                        ("fi", "Maradi"),
                        ("fr", "Maradi"),
                        ("gu", "‡™Æ‡™æ‡™∞‡™æ‡™°‡´Ä ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Maradi"),
                        ("ha_NE", "Yankin Maradi"),
                        ("hi", "‡§Æ‡§∞‡§æ‡§°‡•Ä ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("hr", "Maradi"),
                        ("id", "Maradi"),
                        ("it", "regione di Maradi"),
                        ("ja", "„Éû„É©„Éá„Ç£Â∑û"),
                        ("ka", "·Éõ·Éê·É†·Éê·Éì·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤Æ‡≤∞‡≤æ‡≤¶\u{cbf} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÎßàÎùºÎîî Ï£º"),
                        ("lt", "Marad≈æio regionas"),
                        ("lv", "Maradi reƒ£ions"),
                        ("mr", "‡§Æ‡§æ‡§∞‡§°‡•Ä ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Maradi"),
                        ("nb", "Maradi"),
                        ("nl", "Maradi"),
                        ("no", "Maradi"),
                        ("pl", "Maradi"),
                        ("pt", "Maradi"),
                        ("ro", "Regiunea Maradi"),
                        ("ru", "–ú–∞—Ä–∞–¥–∏"),
                        ("si", "‡∂∏‡∂ª‡∂Ø\u{dd3} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Maradi"),
                        ("ta", "‡ÆÆ\u{bbe}‡Æ∞‡Æü‡Æø ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞Æ\u{c3e}‡∞∞\u{c3e}‡∞°\u{c40} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏°‡∏≤‡∏£‡∏≤‡∏î\u{e35}"),
                        ("tr", "Maradi"),
                        ("uk", "–ú–∞—Ä–∞–¥—ñ"),
                        ("ur", "ŸÖÿßÿ±ÿßÿØ€å ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Maradi"),
                        ("zh", "È©¨ÊãâËø™Â§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Maradi"].to_vec(),
                },
            ),
            (
                "5",
                Subdivision {
                    name: "Tahoua",
                    country_alpha2: Alpha2::NE,
                    code: "5",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(14.883333),
                        longitude: Some(5.266667),
                        max_latitude: Some(14.9285551),
                        min_latitude: Some(14.8680217),
                        max_longitude: Some(5.2966928),
                        min_longitude: Some(5.241680100000001),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿ∑ÿßŸàÿ©"),
                        ("bn", "‡¶§\u{9be}‡¶π‡ßã‡¶Ø\u{9bc}\u{9be} ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Tahoua"),
                        ("ccp", "ëÑëëÑ¶\u{1112a}ëÑ†"),
                        ("ceb", "Tahoua"),
                        ("da", "Tahoua"),
                        ("de", "Tahoua"),
                        ("el", "Œ§Œ±œáŒøœçŒ±"),
                        ("en", "Tahoua"),
                        ("es", "Regi√≥n de Tahoua"),
                        ("fi", "Tahoua"),
                        ("fr", "Tahoua"),
                        ("gu", "‡™§‡™æ‡™π‡´å‡™Ü ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Tahoua"),
                        ("ha_NE", "Yankin Tahoua"),
                        ("hi", "‡§§‡§æ‡§π\u{941}‡§Ü ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("hr", "Tahoua"),
                        ("id", "Tahoua"),
                        ("it", "regione di Tahoua"),
                        ("ja", "„Çø„Ç¶„Ç¢Â∑û"),
                        ("ka", "·É¢·Éê·É∞·É£·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤§‡≤æ‡≤π\u{ccc} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÌÉÄÏö∞ÏïÑ Ï£º"),
                        ("lt", "Tahovos regionas"),
                        ("lv", "Tahua reƒ£ions"),
                        ("mr", "‡§ü‡§π‡•å‡§Ü ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Daeah Tahoua"),
                        ("nb", "Tahoua"),
                        ("nl", "Tahoua"),
                        ("no", "Tahoua"),
                        ("pl", "Region Tahoua"),
                        ("pt", "Tahoua"),
                        ("ro", "Regiunea Tahoua"),
                        ("ru", "–¢–∞—Ö—É–∞"),
                        ("si", "‡∂ß\u{dcf}‡∂î‡∑Ñ\u{dd4}‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫ ‡∂Ü"),
                        ("sv", "Tahoua"),
                        ("ta", "‡Æü‡Æπ‡Øå‡Æ∞\u{bbe} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞§‡∞π\u{c4b}‡∞µ\u{c3e} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡πÄ‡∏Ç‡∏ï‡∏ó‡∏≤‡πÇ‡∏Æ‡∏£\u{e31}‡∏ß"),
                        ("tr", "Tahoua"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –¢–∞—Ö—É–∞"),
                        ("ur", "ÿ™ÿß€Åÿ§ÿß ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Tahoua"),
                        ("zh", "Â°îÁì¶Â§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Tahoua"].to_vec(),
                },
            ),
            (
                "6",
                Subdivision {
                    name: "Tillab√©ri",
                    country_alpha2: Alpha2::NE,
                    code: "6",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(14.6489525),
                        longitude: Some(2.1450245),
                        max_latitude: Some(15.7044501),
                        min_latitude: Some(11.9016119),
                        max_longitude: Some(4.254564999999999),
                        min_longitude: Some(0.16625),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿ™ŸäŸÑÿßÿ®Ÿäÿ±Ÿä"),
                        ("bn", "‡¶§‡¶ø‡¶≤\u{9cd}‡¶≤\u{9cd}‡¶Ø\u{9be}‡¶¨‡ßá‡¶∞‡¶ø ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Tillab√©ri"),
                        ("ccp", "ëÑëëÑ£\u{11133}ëÑ¶ëÑùëÑ¨ëÑ¢\u{11128}"),
                        ("ceb", "Tillaberi Region"),
                        ("da", "Tillab√©ri"),
                        ("de", "Tillab√©ri"),
                        ("el", "Œ§ŒπŒªŒ±ŒºœÄŒ≠œÅŒπ"),
                        ("en", "Tillab√©ri"),
                        ("es", "Regi√≥n de Tillab√©ri"),
                        ("fi", "Tillab√©ri"),
                        ("fr", "Tillab√©ri"),
                        ("gu", "‡™ü‡™ø‡™≤‡™æ‡™¨\u{ac7}‡™∞‡´Ä ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Tillab√©ri"),
                        ("ha_NE", "Tillab√©ri"),
                        ("hi", "‡§ü‡§ø‡§≤‡§æ‡§¨\u{947}‡§∞‡•Ä ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("hr", "Tillab√©ri"),
                        ("id", "Tillab√©ri"),
                        ("it", "regione di Tillab√©ri"),
                        ("ja", "„ÉÜ„Ç£„É©„Éô„É™Â∑û"),
                        ("ka", "·É¢·Éò·Éö·Éê·Éë·Éî·É†·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤ü\u{cbf}‡≤≤\u{ccd}‡≤≤‡≤¨\u{cc6}‡≤∞\u{cbf} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "Ìã∏ÎùºÎ≤†Î¶¨ Ï£º"),
                        ("lt", "Tilaberio regionas"),
                        ("lv", "Tilaberi reƒ£ions"),
                        ("mr", "‡§§‡§ø‡§≤‡§æ‡§¨\u{947}‡§∞‡•Ä ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Tillab√©ri"),
                        ("nb", "Tillab√©ri"),
                        ("nl", "Tillab√©ri"),
                        ("no", "Tillab√©ri"),
                        ("pl", "Region Tillab√©ri"),
                        ("pt", "Tillab√©ri"),
                        ("ro", "Regiunea Tillab√©ri"),
                        ("ru", "–¢–∏–ª–ª–∞–±–µ—Ä–∏"),
                        ("si", "‡∂ß\u{dd2}‡∂Ω\u{dca}‡∂Ω‡∂∏\u{dca}‡∂∂‡∑ô‡∂ª\u{dd2} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Tillaberi"),
                        ("ta", "‡Æü‡Æø‡Æ≤\u{bcd}‡Æ≤‡Æ™‡ØÜ‡Æ∞‡Æø ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        (
                            "te",
                            "‡∞ü\u{c3f}‡∞≤\u{c4d}‡∞≤\u{c3e}‡∞¨\u{c46}‡∞∞\u{c3f} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç",
                        ),
                        ("th", "‡πÄ‡∏Ç‡∏ï‡∏ó\u{e35}‡∏£‡∏≤‡πÄ‡∏ö‡∏£\u{e35}"),
                        ("tr", "Tillab√©ri"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –¢—ñ–ª–ª–∞–±–µ—Ä—ñ"),
                        ("ur", "ÿ™€åŸÑÿßÿ®€íÿ±€å ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Tillab√©ri"),
                        ("zh", "ËíÇÊãâË¥ùÈáåÂ§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Tillaberi"].to_vec(),
                },
            ),
            (
                "7",
                Subdivision {
                    name: "Zinder",
                    country_alpha2: Alpha2::NE,
                    code: "7",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(13.805278),
                        longitude: Some(8.988332999999999),
                        max_latitude: Some(13.8345383),
                        min_latitude: Some(13.7752561),
                        max_longitude: Some(9.0148114),
                        min_longitude: Some(8.9602306),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÖŸÜÿ∑ŸÇÿ© ÿ≤ŸäŸÜÿØÿ±"),
                        ("bn", "‡¶ú‡¶ø‡¶®\u{9cd}‡¶°\u{9be}‡¶∞ ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ccp", "ëÑé\u{11128}ëÑö\u{11134}ëÑìëÑ¢\u{11134}"),
                        ("ceb", "Zinder"),
                        ("da", "Zinder"),
                        ("de", "Zinder"),
                        ("el", "ŒñŒØŒΩœÑŒµœÅ"),
                        ("en", "Zinder"),
                        ("es", "Regi√≥n de Zinder"),
                        ("fi", "Zinder"),
                        ("fr", "Zinder"),
                        ("gu", "‡™ù‡™ø‡™®\u{acd}‡™°‡™∞ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("ha", "Yankin Zinder"),
                        ("ha_NE", "Yankin Zinder"),
                        ("hi", "‡§ú‡§ø‡§®\u{94d}‡§°‡§∞ ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("hr", "Zinder"),
                        ("id", "Zinder"),
                        ("it", "regione di Zinder"),
                        ("ja", "„Ç∂„É≥„Éá„Éº„É´Â∑û"),
                        ("ka", "·Éñ·Éò·Éú·Éì·Éî·É†·Éò·É° ·É†·Éî·Éí·Éò·Éù·Éú·Éò"),
                        ("kn", "‡≤ù\u{cbf}‡≤Ç‡≤°‡≤∞\u{ccd} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÏûîÎç∞Î•¥ Ï£º"),
                        ("lt", "Zinderio regionas"),
                        ("lv", "Zinderas reƒ£ions"),
                        ("mr", "‡§ú‡§ø\u{902}‡§°‡§∞ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Zinder"),
                        ("nb", "Zinder"),
                        ("nl", "Zinder"),
                        ("no", "Zinder"),
                        ("pl", "Region Zinder"),
                        ("pt", "Zinder"),
                        ("ro", "Regiunea Zinder"),
                        ("ru", "–ó–∏–Ω–¥–µ—Ä"),
                        ("si", "‡∑É\u{dd2}‡∂±\u{dca}‡∂©‡∂ª\u{dca} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Zinder"),
                        ("ta", "‡Æö‡Æø‡Æ©\u{bcd}‡Æü‡ØÜ‡Æ∞\u{bcd} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞ú\u{c3f}‡∞Ç‡∞°‡∞∞\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡πÄ‡∏°\u{e37}‡∏≠‡∏á‡∏≠\u{e34}‡πÇ‡∏ã‡∏•‡∏≤"),
                        ("tr", "Zinder (Nijer b√∂lgesi)"),
                        ("uk", "–ó—ñ–Ω–¥–µ—Ä"),
                        ("ur", "ÿ≤ŸÜÿØÿ± ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Khu v·ª±c Zinder"),
                        ("zh", "Ê¥•Âæ∑Â∞îÂ§ßÂå∫"),
                    ]),
                    unofficial_name_list: ["Zinder"].to_vec(),
                },
            ),
            (
                "8",
                Subdivision {
                    name: "Niamey",
                    country_alpha2: Alpha2::NE,
                    code: "8",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(13.521389),
                        longitude: Some(2.105278),
                        max_latitude: Some(13.5793394),
                        min_latitude: Some(13.4461983),
                        max_longitude: Some(2.2061066),
                        min_longitude: Some(2.0319587),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::UrbanCommunity,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("af", "Niamey"),
                        ("am", "·äí·ã´·àú"),
                        ("ar", "ŸÜŸäÿßŸÖŸä"),
                        ("az", "Niamey"),
                        ("be", "–ì–æ—Ä–∞–¥ –ù—ñ—è–º–µ–π"),
                        ("bg", "–ù–∏–∞–º–µ–π"),
                        ("bn", "‡¶®‡¶ø‡¶Ø\u{9bc}\u{9be}‡¶Æ‡ßá"),
                        ("bs", "Niamey"),
                        ("ca", "Niamey"),
                        ("ccp", "ëÑö\u{11128}ëÑ†ëÑüëÑ¨"),
                        ("ceb", "Niamey (ulohang dakbayan)"),
                        ("cs", "Niamey"),
                        ("cy", "Niamey"),
                        ("da", "Niamey"),
                        ("de", "Niamey"),
                        ("el", "ŒùŒπŒ±ŒºŒ≠œÖ"),
                        ("en", "Niamey"),
                        ("es", "Niamey"),
                        ("et", "Niamey"),
                        ("eu", "Niamei"),
                        ("fa", "ŸÜ€åÿßŸÖ€å"),
                        ("fi", "Niamey"),
                        ("fr", "Niamey"),
                        ("ga", "Niamey"),
                        ("gl", "Niamey"),
                        ("gu", "‡™®‡™ø‡™Ü‡™Æ‡´Ä"),
                        ("ha", "Niamey"),
                        ("ha_NE", "Niamey"),
                        ("he", "◊†◊ô◊ê◊û◊ô◊ô"),
                        ("hi", "‡§®‡§ø‡§Ø‡§æ‡§Æ‡•Ä"),
                        ("hr", "Niamey"),
                        ("hu", "Niamey"),
                        ("hy", "’Ü’´’°’¥’•’µ"),
                        ("id", "Niamey"),
                        ("is", "N√≠amey"),
                        ("it", "Niamey"),
                        ("ja", "„Éã„Ç¢„É°"),
                        ("ka", "·Éú·Éò·Éê·Éõ·Éî·Éò"),
                        ("kk", "–ù–∏–∞–º–µ–π"),
                        ("kn", "‡≤®\u{cbf}‡≤Ø‡≤æ‡≤Æ\u{cc6}"),
                        ("ko", "ÎãàÏïÑÎ©î"),
                        ("ky", "–ù–∏–∞–º–µ–π"),
                        ("lt", "Niamƒójus"),
                        ("lv", "Niameja"),
                        ("mk", "–ù–∏—ò–∞–º–µ—ò"),
                        ("mn", "–ù–∏–∞–º–µ–π"),
                        ("mr", "‡§®‡§ø‡§Ø‡§æ‡§Æ\u{947}"),
                        ("ms", "Niamey"),
                        ("nb", "Niamey"),
                        ("nl", "Niamey"),
                        ("no", "Niamey"),
                        ("pa", "‡®®‡®ø‡®Ü‡®Æ‡©Ä"),
                        ("pl", "Niamey"),
                        ("pt", "Niamey"),
                        ("ro", "Niamey"),
                        ("ru", "–ù–∏–∞–º–µ–π"),
                        ("si", "‡∂±\u{dd2}‡∂∫\u{dcf}‡∂∏‡∑ö"),
                        ("sk", "Niamey"),
                        ("sl", "Niamey"),
                        ("so", "Niamey"),
                        ("sq", "Niamey"),
                        ("sr", "–ù–∏—ò–∞–º–µ—ò"),
                        ("sr_Latn", "Nijamej"),
                        ("sv", "Niamey"),
                        ("sw", "Niamey"),
                        ("ta", "‡Æ®‡Æø‡ÆØ\u{bbe}‡ÆÆ‡Æø"),
                        ("te", "‡∞®‡∞Ø\u{c3e}‡∞Æ\u{c40}"),
                        ("th", "‡∏ô\u{e35}‡∏≠‡∏≤‡πÄ‡∏°"),
                        ("tk", "Niame√Ω"),
                        ("tr", "Niamey"),
                        ("uk", "–ù—ñ–∞–º–µ–π"),
                        ("ur", "ŸÜ€åÿßŸÖ€å"),
                        ("uz", "Niamey"),
                        ("vi", "Niamey"),
                        ("yo", "Niamey"),
                        ("yo_BJ", "Niamey"),
                        ("yue", "Â∞º‰∫ûÁæé"),
                        ("yue_Hans", "Â∞º‰∫öÁæé"),
                        ("zh", "Â∞º‰∫ûÁæé"),
                    ]),
                    unofficial_name_list: ["Niamey"].to_vec(),
                },
            ),
        ])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "ne")]
/// [`Country`](crate::Country) struct for this country.
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::NE,
        alpha3: Alpha3::NER,
        address_format: None,
        continent: Continent::Africa,
        country_code: 227,
        currency_code: CurrencyCode::XOF,
        gec: Some(GEC::NG),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "00",
        ioc: Some(IOC::NIG),
        iso_long_name: "The Republic of the Niger",
        iso_short_name: "Niger",
        official_language_list: ["fr"].to_vec(),
        spoken_language_list: ["fr"].to_vec(),
        national_destination_code_length_list: [2].to_vec(),
        national_number_length_list: [8].to_vec(),
        national_prefix: "0",
        nationality: Some("Nigerian"),
        number: "562",
        postal_code: true,
        postal_code_format: Some("\\d{4}"),
        region: Some(Region::Africa),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::WesternAfrica),
        un_locode: "NE",
        unofficial_name_list: ["Niger", "N√≠ger", "„Éã„Ç∏„Çß„Éº„É´"].to_vec(),
        world_region: WorldRegion::EMEA,
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Niger"),
            ("af", "Niger"),
            ("ak", "Niger"),
            ("am", "·äí·åÑ·à≠"),
            ("an", "Niger"),
            ("ar", "ÿßŸÑŸÜ\u{651}Ÿäÿ¨ÿ±"),
            ("as", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡ß∞"),
            ("ay", "Niger"),
            ("az", "Niger"),
            ("ba", "Niger"),
            ("be", "–ù—ñ–≥–µ—Ä"),
            ("bg", "–ù–∏–≥–µ—Ä"),
            ("bi", "Niger"),
            ("bn", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡¶∞"),
            ("bn_IN", "‡¶®\u{9be}‡¶á‡¶ú\u{9be}‡¶∞"),
            ("br", "Niger"),
            ("bs", "Niger"),
            ("ca", "N√≠ger"),
            ("ce", "–ù–∏–≥–µ—Ä"),
            ("ch", "Niger"),
            ("cs", "Niger"),
            ("cv", "–ù–∏–≥–µ—Ä"),
            ("cy", "Niger"),
            ("da", "Niger"),
            ("de", "Niger"),
            ("dv", "ﬁÇ\u{7a9}ﬁñ\u{7a6}ﬁÉ\u{7aa}"),
            ("dz", "‡Ωì‡Ω†\u{f72}‡ºã‡Ωá‡Ω¢‡ºç"),
            ("ee", "Niger"),
            ("el", "ŒùŒØŒ≥Œ∑œÅŒ±œÇ"),
            ("en", "Niger"),
            ("eo", "Niƒùero"),
            ("es", "Niger"),
            ("et", "Niger"),
            ("eu", "Niger"),
            ("fa", "ŸÜ€åÿ¨ÿ±"),
            ("ff", "Niiser"),
            ("fi", "Niger"),
            ("fo", "Niger"),
            ("fr", "Niger"),
            ("fy", "Niger"),
            ("ga", "An N√≠gir"),
            ("gl", "N√≠xer"),
            ("gn", "Niger"),
            ("gu", "‡™®‡™æ‡™á‡™ú‡™∞"),
            ("gv", "Yn Neegeyr"),
            ("ha", "Nijar"),
            ("he", "◊†◊ô◊ñ◊≥◊®"),
            ("hi", "‡§®‡§æ‡§á‡§ú‡§∞"),
            ("hr", "Niger"),
            ("ht", "Nij√®"),
            ("hu", "Niger"),
            ("hy", "’Ü’´’£’•÷Ä"),
            ("ia", "Niger"),
            ("id", "Niger"),
            ("io", "Nijer"),
            ("is", "N√≠ger"),
            ("it", "Niger"),
            ("iu", "Niger"),
            ("ja", "„Éã„Ç∏„Çß„Éº„É´"),
            ("ka", "·Éú·Éò·Éí·Éî·É†·Éò"),
            ("ki", "Niger"),
            ("kk", "–ù–∏–≥–µ—Ä"),
            ("kl", "Niger"),
            ("km", "·ûì\u{17b8}·û†\u{17d2}·ûü·üÅ·ûö"),
            ("kn", "‡≤®‡≥à‡≤ú‡≤∞\u{ccd}"),
            ("ko", "ÎãàÏ†úÎ•¥"),
            ("ku", "N√Æjer"),
            ("kv", "Niger"),
            ("kw", "Pow Nijer"),
            ("ky", "–ù–∏–≥–µ—Ä"),
            ("lo", "Niger"),
            ("lt", "Nigeris"),
            ("lv", "Nigƒìra"),
            ("mi", "Niger"),
            ("mk", "–ù–∏–≥–µ—Ä"),
            ("ml", "‡¥®‡µà‡¥ú‡¥∞\u{d4d}\u{200d}"),
            ("mn", "–ù–∏–≥–µ—Ä"),
            ("mr", "‡§®‡§æ‡§Ø‡§ú\u{947}‡§∞"),
            ("ms", "Niger"),
            ("mt", "Niƒ°er"),
            (
                "my",
                "·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÇ·Äª·Ä¨·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
            ),
            ("na", "Niger"),
            ("nb", "Niger"),
            ("ne", "‡§®‡§ø‡§ó‡§∞"),
            ("nl", "Niger"),
            ("nn", "Niger"),
            ("nv", "Niger"),
            ("oc", "Nig√®r"),
            ("or", "‡¨®\u{b3e}‡¨á‡¨ú‡¨∞"),
            ("pa", "‡®®‡©Ä‡®ú\u{a3c}‡®∞"),
            ("pi", "‡§®‡•Ä‡§ú\u{947}"),
            ("pl", "Niger"),
            ("ps", "ŸÜÿß€åÿ¨€êÿ±"),
            ("pt", "N√≠ger"),
            ("pt_BR", "N√≠ger"),
            ("ro", "Niger"),
            ("ru", "–ù–∏–≥–µ—Ä"),
            ("rw", "Nigeri"),
            ("sc", "N√¨ger"),
            ("sd", "Niger"),
            ("si", "‡∂±\u{dd2}‡∂ú‡∂ª\u{dca}"),
            ("sk", "Niger"),
            ("sl", "Niger"),
            ("so", "Niger"),
            ("sq", "Niger"),
            ("sr", "–ù–∏–≥–µ—Ä"),
            ("sv", "Niger"),
            ("sw", "Niger"),
            ("ta", "‡Æ®‡Øà‡Æï‡Æ∞\u{bcd}"),
            ("te", "‡∞®\u{c48}‡∞ú\u{c46}‡∞∞\u{c4d}"),
            ("tg", "–ù–∏–≥–µ—Ä"),
            ("th", "‡πÑ‡∏ô‡πÄ‡∏à‡∏≠‡∏£\u{e4c}"),
            ("ti", "·äì·ã≠·åÄ·à≠"),
            ("tk", "Niger"),
            ("tl", "Niger"),
            ("tr", "Nijer"),
            ("tt", "–ù–∏g–µ—Ä"),
            ("ug", "ŸÜŸâ⁄Ø€êÿ±"),
            ("uk", "–ù—ñ–≥–µ—Ä"),
            ("ur", "ŸÜÿßÿ¶ÿ¨ÿ±"),
            ("uz", "Niger"),
            ("ve", "Niger"),
            ("vi", "Ni-gie"),
            ("wa", "Nidjer"),
            ("wo", "Nijeer"),
            ("xh", "Niger"),
            ("yo", "N√¨j·∫π\u{300}r"),
            ("zh_CN", "Â∞ºÊó•Â∞î"),
            ("zh_HK", "Â∞ºÊó•Áàæ"),
            ("zh_TW", "Â∞ºÊó•"),
            ("zu", "INayighe"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
