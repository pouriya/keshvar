// DO NOT TOUCH THIS FILE. (Auto-generated via `code_gen/countries.rs`)

// The Togolese Republic

#[cfg(all(feature = "tg", feature = "constants"))]
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> = None;
    pub const ALPHA2: Alpha2 = Alpha2::TG;
    pub const ALPHA3: Alpha3 = Alpha3::TGO;
    pub const CONTINENT: Continent = Continent::Africa;
    pub const COUNTRY_CODE: usize = 228;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::XOF;
    pub const GEC: Option<GEC> = Some(GEC::TO);
    pub const INTERNATIONAL_PREFIX: &str = "00";
    pub const IOC: Option<IOC> = Some(IOC::TOG);
    pub const ISO_SHORT_NAME: &str = "Togo";
    pub const ISO_LONG_NAME: &str = "The Togolese Republic";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["fr"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["fr"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[2];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[7];
    pub const NATIONAL_PREFIX: &str = "None";
    pub const NATIONALITY: Option<&str> = Some("Togolese");
    pub const NUMBER: &str = "768";
    pub const POSTAL_CODE: bool = false;
    pub const POSTAL_CODE_FORMAT: Option<&str> = None;
    pub const REGION: Option<Region> = Some(Region::Africa);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::WesternAfrica);
    pub const UN_LOCODE: &str = "TG";
    pub const UNOFFICIAL_NAME_LIST: &[&str] = &["Togo", "„Éà„Éº„Ç¥"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::EMEA;
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Togo"),
        ("af", "Togo"),
        ("ak", "Togo"),
        ("am", "·â∂·åé"),
        ("an", "Togo"),
        ("ar", "ÿ™Ÿàÿ∫Ÿà"),
        ("as", "‡¶ü‡ßã‡¶ó‡ßã"),
        ("ay", "Togo"),
        ("az", "Toqo"),
        ("ba", "Togo"),
        ("be", "–¢–æ–≥–∞"),
        ("bg", "–¢–æ–≥–æ"),
        ("bi", "Togo"),
        ("bn", "‡¶ü‡ßã‡¶ó‡ßã"),
        ("bn_IN", "‡¶ü‡ßã‡¶ó‡ßã"),
        ("br", "Togo"),
        ("bs", "Togo"),
        ("ca", "Togo"),
        ("ce", "–¢–æ–≥–æ"),
        ("ch", "Togo"),
        ("cs", "Togo"),
        ("cv", "–¢–æ–≥–æ"),
        ("cy", "Togo"),
        ("da", "Togo"),
        ("de", "Togo"),
        ("dv", "ﬁì\u{7af}ﬁé\u{7af}"),
        ("dz", "‡Ωä\u{f7c}‡ºã‡ΩÇ\u{f7c}‡ºç"),
        ("ee", "Togo"),
        ("el", "Œ§œåŒ≥Œ∫Œø"),
        ("en", "Togo"),
        ("eo", "Togo"),
        ("es", "Togo"),
        ("et", "Togo"),
        ("eu", "Togo"),
        ("fa", "ÿ™Ÿà⁄ØŸà"),
        ("ff", "Togo"),
        ("fi", "Togo"),
        ("fo", "Togo"),
        ("fr", "Togo"),
        ("fy", "Togo"),
        ("ga", "T√≥ga"),
        ("gl", "Togo"),
        ("gn", "Togo"),
        ("gu", "‡™ü‡´ã‡™ó‡´ã"),
        ("gv", "Yn Togo"),
        ("ha", "Togo"),
        ("he", "◊ò◊ï◊í◊ï"),
        ("hi", "‡§ü‡•ã‡§ó‡•ã"),
        ("hr", "Togo"),
        ("ht", "Togo"),
        ("hu", "Togo"),
        ("hy", "’è’∏’£’∏"),
        ("ia", "Togo"),
        ("id", "Togo"),
        ("io", "Togo"),
        ("is", "T√≥g√≥"),
        ("it", "Togo"),
        ("iu", "Togo"),
        ("ja", "„Éà„Éº„Ç¥"),
        ("ka", "·É¢·Éù·Éí·Éù"),
        ("ki", "Togo"),
        ("kk", "–¢–æ–≥–æ"),
        ("kl", "Togo"),
        ("km", "·ûè\u{17bc}·û†\u{17d2}·ûÇ·üÑ"),
        ("kn", "‡≤ü‡≥ã‡≤ó‡≥ã"),
        ("ko", "ÌÜ†Í≥†"),
        ("ku", "Togo"),
        ("kv", "Togo"),
        ("kw", "Togo"),
        ("ky", "–¢–æ–≥–æ"),
        ("lo", "Togo"),
        ("lt", "Togas"),
        ("lv", "Togo"),
        ("mi", "Toko"),
        ("mk", "–¢–æ–≥–æ"),
        ("ml", "‡¥ü‡µã‡¥ó‡µã"),
        ("mn", "–¢–æ–≥–æ"),
        ("mr", "‡§§‡•ã‡§ó‡•ã"),
        ("ms", "Togo"),
        ("mt", "Togo"),
        (
            "my",
            "·Äê\u{102d}\u{102f}·ÄÇ\u{102d}\u{102f}·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
        ),
        ("na", "Togo"),
        ("nb", "Togo"),
        ("ne", "‡§ü‡•ã‡§ó‡•ã"),
        ("nl", "Togo"),
        ("nn", "Togo"),
        ("nv", "Togo"),
        ("oc", "T√≤go"),
        ("or", "‡¨ü‡≠ã‡¨ó‡≠ã"),
        ("pa", "‡®ü\u{a4b}‡®ó\u{a4b}"),
        ("pi", "‡§ü‡•ã‡§ó‡•ã"),
        ("pl", "Togo"),
        ("ps", "Togo"),
        ("pt", "Togo"),
        ("pt_BR", "Togo"),
        ("ro", "Togo"),
        ("ru", "–¢–æ–≥–æ"),
        ("rw", "Togo"),
        ("sc", "Togo"),
        ("sd", "ŸΩŸà⁄ØŸà"),
        ("si", "‡∂ß‡∑ù‡∂ú‡∑ù"),
        ("sk", "Togo"),
        ("sl", "Togo"),
        ("so", "Toogo"),
        ("sq", "Togo"),
        ("sr", "–¢–æ–≥–æ"),
        ("sv", "Togo"),
        ("sw", "Togo"),
        ("ta", "‡Æü‡Øã‡Æï‡Øã"),
        ("te", "‡∞§\u{c4b}‡∞ó\u{c4b}"),
        ("tg", "–¢–æ–≥–æ"),
        ("th", "‡πÇ‡∏ï‡πÇ‡∏Å"),
        ("ti", "·â∂·åé"),
        ("tk", "Togolez"),
        ("tl", "Togo"),
        ("tr", "Togo"),
        ("tt", "–¢–æg–æ"),
        ("ug", "ÿ™Ÿà⁄ØŸà"),
        ("uk", "–¢–æ–≥–æ"),
        ("ur", "ŸπŸà⁄ØŸà"),
        ("uz", "Togo"),
        ("ve", "Togo"),
        ("vi", "T√¥-g√¥"),
        ("wa", "Togo"),
        ("wo", "Tog√≥o"),
        ("xh", "Togo"),
        ("yo", "T√≥g√≤"),
        ("zh_CN", "Â§öÂì•"),
        ("zh_HK", "Â§öÂì•"),
        ("zh_TW", "Â§öÂì•"),
        ("zu", "ITogo"),
    ];
    #[cfg(all(feature = "tg", feature = "geo", feature = "constants"))]
    pub mod geo {
        pub const LATITUDE: f64 = 8.619543;
        pub const LONGITUDE: f64 = 0.824782;
        pub const MAX_LATITUDE: f64 = 11.139617;
        pub const MAX_LONGITUDE: f64 = 1.8089071;
        pub const MIN_LATITUDE: f64 = 6.0812;
        pub const MIN_LONGITUDE: f64 = -0.1440418;
        pub const NORTHEAST_LATITUDE: f64 = 11.139617;
        pub const NORTHEAST_LONGITUDE: f64 = 1.8089071;
        pub const SOUTHWEST_LATITUDE: f64 = 6.0812;
        pub const SOUTHWEST_LONGITUDE: f64 = -0.1440418;
    }
}
#[cfg(all(feature = "tg", feature = "geo"))]
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: 8.619543,
            longitude: 0.824782,
            max_latitude: 11.139617,
            max_longitude: 1.8089071,
            min_latitude: 6.0812,
            min_longitude: -0.1440418,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: 11.139617,
                    longitude: 1.8089071,
                },
                southwest: CountryGeoBound {
                    latitude: 6.0812,
                    longitude: -0.1440418,
                },
            },
        }
    }
}

#[cfg(all(feature = "tg", feature = "subdivisions"))]
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([
            (
                "C",
                Subdivision {
                    name: "Centre",
                    country_alpha2: Alpha2::TG,
                    code: "C",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(8.6586029),
                        longitude: Some(1.0586135),
                        max_latitude: Some(9.296292),
                        min_latitude: Some(7.9023141),
                        max_longitude: Some(1.650187),
                        min_longitude: Some(0.3816739),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿßŸÑÿ•ŸÇŸÑŸäŸÖ ÿßŸÑÿ£Ÿàÿ≥ÿ∑"),
                        ("bg", "–¶–µ–Ω—Ç—Ä–∞–ª–µ–Ω —Ä–µ–≥–∏–æ–Ω"),
                        ("bn", "‡¶∏‡ßá‡¶®\u{9cd}‡¶ü\u{9cd}‡¶∞\u{9be}‡¶≤ ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Regi√≥ Central"),
                        ("ccp", "ëÑ•ëÑ¨ëÑö\u{11134}ëÑë\u{11133}ëÑ¢ëÑ£\u{11134}"),
                        ("ceb", "Centrale"),
                        ("da", "Centrale"),
                        ("de", "Region Centrale"),
                        ("el", "ŒöŒµŒΩœÑœÅŒπŒ∫ŒÆ Œ†ŒµœÅŒπœÜŒ≠œÅŒµŒπŒ±"),
                        ("en", "Centrale"),
                        ("es", "Central"),
                        ("fi", "Centrale"),
                        ("fr", "R√©gion centrale"),
                        ("gu", "‡™∏\u{ac7}‡™®\u{acd}‡™ü\u{acd}‡™∞‡™≤ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("hi", "‡§∏\u{947}\u{902}‡§ü\u{94d}‡§∞‡§≤ ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("id", "Region Centrale"),
                        ("it", "regione Centrale"),
                        ("ja", "‰∏≠Â§ÆÂ∑û"),
                        ("kn", "‡≤∏\u{cc6}‡≤Ç‡≤ü\u{ccd}‡≤∞‡≥á‡≤≤\u{ccd} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "Ï§ëÏïô Ï£º"),
                        ("lt", "Centrinis regionas"),
                        ("lv", "CentrƒÅlais reƒ£ions"),
                        ("mr", "‡§Æ‡§ß\u{94d}‡§Ø‡§µ‡§∞\u{94d}‡§§‡•Ä ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Centrale Region"),
                        ("nb", "Centrale"),
                        ("nl", "Centrale"),
                        ("no", "Centrale"),
                        ("pl", "Region Centre"),
                        ("pt", "Centrale"),
                        ("ro", "Regiunea Centrale"),
                        ("ru", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å"),
                        ("si", "‡∑É‡∑ô‡∂±\u{dca}‡∂ß\u{dca}\u{200d}‡∂ª‡∂Ω‡∑ö ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Centrale (region)"),
                        ("ta", "‡Æö‡ØÜ‡Æ©\u{bcd}‡Æ±\u{bbe}‡Æ≤‡Øá ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        (
                            "te",
                            "‡∞∏\u{c46}‡∞Ç‡∞ü\u{c4d}‡∞∞\u{c47}‡∞≤\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç",
                        ),
                        ("th", "‡πÄ‡∏Ç‡∏ï‡πÄ‡∏ã‡∏ô‡∏ó‡∏£‡∏≤‡πÄ‡∏•"),
                        ("tr", "Centrale"),
                        ("uk", "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π —Ä–µ–≥—ñ–æ–Ω"),
                        ("ur", "ÿ≥ŸàŸÜÿ™ÿ±ÿßŸÑ ÿπŸÑÿßŸÇ€Åÿå ŸπŸà⁄ØŸà"),
                        ("vi", "Centrale"),
                        ("zh", "‰∏≠ÈÉ®Âå∫"),
                    ]),
                    unofficial_name_list: ["Centre"].to_vec(),
                },
            ),
            (
                "K",
                Subdivision {
                    name: "Kara",
                    country_alpha2: Alpha2::TG,
                    code: "K",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(9.548888999999999),
                        longitude: Some(1.190556),
                        max_latitude: Some(9.5661352),
                        min_latitude: Some(9.534310099999999),
                        max_longitude: Some(1.2201691),
                        min_longitude: Some(1.1657524),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ•ŸÇŸÑŸäŸÖ ŸÉÿßÿ±ÿß"),
                        ("bg", "–ö–∞—Ä–∞"),
                        ("bn", "‡¶ï\u{9be}‡¶∞\u{9be} ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Regi√≥ de la Kara"),
                        ("ccp", "ëÑáëÑ¢"),
                        ("ceb", "Kara"),
                        ("da", "Kara"),
                        ("de", "Region Kara"),
                        ("el", "Œ†ŒµœÅŒπœÜŒ≠œÅŒµŒπŒ± ŒöŒ±œÅŒ¨"),
                        ("en", "Kara"),
                        ("es", "Kara"),
                        ("fa", "ŸÖŸÜÿ∑ŸÇŸá ⁄©ÿßÿ±ÿß"),
                        ("fi", "Kara"),
                        ("fr", "R√©gion de la Kara"),
                        ("gu", "‡™ï‡™æ‡™∞‡™æ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("hi", "‡§ï‡§æ‡§∞‡§æ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("id", "Region Kara"),
                        ("it", "regione di Kara"),
                        ("ja", "„Ç´„É©Â∑û"),
                        ("kn", "‡≤ï‡≤æ‡≤∞‡≤æ ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "Ïπ¥Îùº Ï£º"),
                        ("lt", "Karos regionas"),
                        ("lv", "Karas reƒ£ions"),
                        ("mr", "‡§ï‡§æ‡§∞‡§æ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Kara Region"),
                        ("nb", "Kara"),
                        ("nl", "Kara"),
                        ("no", "Kara"),
                        ("pl", "Region Kara"),
                        ("pt", "Kara"),
                        ("ro", "Regiunea Kara"),
                        ("ru", "–ö–∞—Ä–∞"),
                        ("si", "‡∂ö‡∂ª\u{dcf} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sq", "Kara"),
                        ("sv", "Kara (region)"),
                        ("ta", "‡Æï\u{bbe}‡Æ∞\u{bbe} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞ï\u{c3e}‡∞∞\u{c3e} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        (
                            "th",
                            "‡∏ô‡∏≠‡∏£\u{e4c}‡∏ó‡∏£\u{e35}‡πÄ‡∏à\u{e35}\u{e49}‡∏¢‡∏ô, ‡∏™\u{e34}‡∏á‡∏Ñ‡πÇ‡∏õ‡∏£\u{e4c}",
                        ),
                        ("tr", "Kara"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –ö–∞—Ä–∏"),
                        ("ur", "⁄©ÿßÿ±ÿß ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Kara"),
                        ("zh", "Âç°ÊãâÂå∫"),
                    ]),
                    unofficial_name_list: ["Kara"].to_vec(),
                },
            ),
            (
                "M",
                Subdivision {
                    name: "Maritime (R√©gion)",
                    country_alpha2: Alpha2::TG,
                    code: "M",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(6.4913504),
                        longitude: Some(1.2891036),
                        max_latitude: Some(6.918175),
                        min_latitude: Some(6.109153399999999),
                        max_longitude: Some(1.806693),
                        min_longitude: Some(0.717368),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ•ŸÇŸÑŸäŸÖ ÿßŸÑÿ®ÿ≠ÿ±Ÿäÿ©"),
                        ("be", "–ü—Ä—ã–º–æ—Ä—Å–∫–∞—è –≤–æ–±–ª–∞—Å—Ü—å"),
                        ("bg", "–ú–∞—Ä–∏—Ç–∏–º"),
                        ("bn", "‡¶Æ‡ßá‡¶∞‡¶ø‡¶ü\u{9be}‡¶á‡¶Æ ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Regi√≥ Mar√≠tima"),
                        ("ccp", "ëÑüëÑ¨ëÑ¢\u{11128}ëÑë\u{1112d}ëÑü\u{11134}"),
                        ("ceb", "Maritime"),
                        ("da", "Maritime"),
                        ("de", "Region Maritime"),
                        ("el", "ŒúŒ±œÅŒπœÑŒØŒº"),
                        ("en", "Maritime"),
                        ("es", "Mar√≠tima"),
                        ("et", "Rannikupiirkond"),
                        ("fa", "ŸÖŸÜÿ∑ŸÇŸá ŸÖÿßÿ±€åÿ™€åŸÖ"),
                        ("fi", "Maritime"),
                        ("fr", "R√©gion maritime"),
                        ("gu", "‡™Æ\u{ac7}‡™∞‡´Ä‡™ü‡™æ‡™à‡™Æ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("hi", "‡§Æ\u{947}‡§∞‡•Ä‡§ü‡§æ‡§á‡§Æ ‡§™\u{94d}‡§∞‡§æ\u{902}‡§§"),
                        ("id", "Region Maritime"),
                        ("it", "regione Marittima"),
                        ("ja", "Ê≤øÂ≤∏Â∑û"),
                        ("kn", "‡≤ï‡≤°‡≤≤ ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÎßàÎ¶¨ÌåÄ Ï£º"),
                        ("lt", "Paj≈´rio regionas"),
                        ("lv", "Piej≈´ras reƒ£ions"),
                        ("mr", "‡§Æ\u{947}‡§∞‡•Ä‡§ü‡§æ‡§á‡§Æ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Maritime Region"),
                        ("nb", "Maritime"),
                        ("nl", "Maritime"),
                        ("no", "Maritime"),
                        ("pl", "Region Maritime"),
                        ("pt", "Maritime"),
                        ("ro", "Regiunea Maritime"),
                        ("ru", "–ü—Ä–∏–º–æ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"),
                        ("si", "‡∂∏‡∂ª\u{dd2}‡∂ß‡∂∫\u{dd2}‡∂∏\u{dca} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Maritime"),
                        ("ta", "‡ÆÆ\u{bbe}‡Æ∞‡Æø‡Æü‡Øà‡ÆÆ\u{bcd} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞Æ\u{c3e}‡∞∞\u{c3f}‡∞ü\u{c48}‡∞Æ\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏°‡∏≤‡∏£\u{e34}‡πÑ‡∏ó‡∏°\u{e4c}"),
                        ("tr", "Maritime"),
                        ("uk", "–ú–∞—Ä—ñ—Ç—ñ–º–µ"),
                        ("ur", "ŸÖ€åÿ±€å Ÿπÿßÿ¶ŸÖ ÿπŸÑÿßŸÇ€Å"),
                        ("vi", "Maritime"),
                        ("zh", "Êø±Êµ∑ÂçÄ"),
                    ]),
                    unofficial_name_list: ["Maritime (R√©gion)"].to_vec(),
                },
            ),
            (
                "P",
                Subdivision {
                    name: "Plateaux",
                    country_alpha2: Alpha2::TG,
                    code: "P",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(7.6101378),
                        longitude: Some(1.0586135),
                        max_latitude: Some(8.368130899999999),
                        min_latitude: Some(6.542187),
                        max_longitude: Some(1.677525),
                        min_longitude: Some(0.501813),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ•ŸÇŸÑŸäŸÖ ÿ®ŸÑÿßÿ™ŸäŸàŸÉÿ≥"),
                        ("bg", "–ü–ª–∞—Ç–æ"),
                        ("bn", "‡¶™\u{9cd}‡¶≤\u{9be}‡¶§‡ßá‡¶ä ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Regi√≥ dels Altiplans"),
                        ("ccp", "ëÑõ\u{11133}ëÑ£ëÑë\u{11128}ëÑ†ëÑá\u{11134}"),
                        ("ceb", "Plateaux"),
                        ("da", "Plateaux"),
                        ("de", "Region Plateaux"),
                        ("el", "Œ†ŒªŒ±œÑœé"),
                        ("en", "Plateaux"),
                        ("es", "Altiplano"),
                        ("fi", "Plateaux"),
                        ("fr", "R√©gion des plateaux"),
                        ("gu", "‡™™\u{acd}‡™≤\u{ac7}‡™ü‡´ã‡™ï\u{acd}‡™∏ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("hi", "‡§™\u{94d}‡§≤\u{947}‡§ü‡•ã ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞"),
                        ("id", "Region Plateaux"),
                        ("it", "regione degli Altopiani"),
                        ("ja", "È´òÂéüÂ∑û"),
                        ("kn", "‡≤™\u{ccd}‡≤≤‡≤æ‡≤ü\u{cc6}‡≤Ø‡≤æ‡≤ï\u{ccd}‡≤∏\u{ccd} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÌîåÎùºÌÜ† Ï£º"),
                        ("lt", "Plynauk≈°tƒós regionas"),
                        ("lv", "Plato reƒ£ions"),
                        ("mr", "‡§™\u{94d}‡§≤\u{947}‡§ü‡•ã ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Plateaux Region"),
                        ("nb", "Plateaux"),
                        ("nl", "Plateaux"),
                        ("no", "Plateaux"),
                        ("pl", "Region Plateaux"),
                        ("pt", "Plateaux"),
                        ("ru", "–ü–ª–∞—Ç–æ"),
                        ("si", "‡∂¥\u{dca}‡∂Ω‡∂ß‡∑ô‡∂ö\u{dca}‡∑É\u{dca} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Plateaux"),
                        ("ta", "‡Æ™‡Æø‡Æ≤‡Øá‡Æü\u{bc0}‡Æ∏\u{bcd} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        (
                            "te",
                            "‡∞™\u{c4d}‡∞≤\u{c3e}‡∞ü‡±Ç‡∞ï\u{c4d}‡∞∏\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç",
                        ),
                        ("th", "‡∏õ‡∏•‡∏≤‡πÇ‡∏ï"),
                        ("tr", "Plateaux"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –ü–ª–∞—Ç–æ"),
                        ("ur", "ŸæŸÑÿßŸπŸàÿ≥ ÿπŸÑÿßŸÇ€Åÿå ŸπŸà⁄ØŸà"),
                        ("vi", "Plateaux"),
                        ("zh", "È´òÂéüÂçÄ"),
                    ]),
                    unofficial_name_list: ["Plateaux"].to_vec(),
                },
            ),
            (
                "S",
                Subdivision {
                    name: "Savannes",
                    country_alpha2: Alpha2::TG,
                    code: "S",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(10.5291781),
                        longitude: Some(0.5257822999999999),
                        max_latitude: Some(11.138977),
                        min_latitude: Some(9.879532),
                        max_longitude: Some(0.9969091000000001),
                        min_longitude: Some(-0.1473239),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Region,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ•ŸÇŸÑŸäŸÖ ÿ≥ÿßŸÅÿßŸÜÿ≥"),
                        ("bg", "–°–∞–≤–∞–Ω"),
                        ("bn", "‡¶∏\u{9be}‡¶≠\u{9be}‡¶®‡ßá‡¶∏ ‡¶Ö‡¶û\u{9cd}‡¶ö‡¶≤"),
                        ("ca", "Regi√≥ de les Sabanes"),
                        ("ccp", "ëÑ•ëÑùëÑöëÑ¨ëÑå\u{11134}"),
                        ("ceb", "Savanes"),
                        ("da", "Savanes"),
                        ("de", "Region Savanes"),
                        ("el", "Œ£Œ±Œ≤Œ¨ŒΩ"),
                        ("en", "Savanes"),
                        ("es", "Sabana"),
                        ("fi", "Savanes"),
                        ("fr", "R√©gion des Savanes"),
                        ("gu", "‡™∏‡™æ‡™µ‡™æ‡™®\u{ac7}‡™∏ ‡™™\u{acd}‡™∞‡™¶\u{ac7}‡™∂"),
                        ("hi", "‡§∏‡§æ‡§µ\u{947}‡§®\u{947}‡§∏ ‡§ï\u{94d}‡§∑\u{947}‡§§\u{94d}‡§∞, ‡§ü‡•ã‡§ó‡•ã"),
                        ("id", "Region Savanes"),
                        ("it", "regione delle Savane"),
                        ("ja", "„Çµ„Éê„ÉäÂ∑û"),
                        ("kn", "‡≤∏‡≤µ‡≤®\u{cc6}‡≤∏\u{ccd} ‡≤™\u{ccd}‡≤∞‡≤¶‡≥á‡≤∂"),
                        ("ko", "ÏÇ¨Î∞ò Ï£º"),
                        ("lt", "Savan≈≥ regionas"),
                        ("lv", "Savanes reƒ£ions"),
                        ("mr", "‡§∏‡§æ‡§µ\u{947}‡§®\u{947}‡§∂ ‡§™\u{94d}‡§∞‡§¶\u{947}‡§∂"),
                        ("ms", "Savanes Region"),
                        ("nb", "Savanes"),
                        ("nl", "Savanes"),
                        ("no", "Savanes"),
                        ("pl", "Region Savanes"),
                        ("pt", "Savanes"),
                        ("ro", "Regiunea Savanes"),
                        ("ru", "–û–±–ª–∞—Å—Ç—å –°–∞–≤–∞–Ω–Ω"),
                        ("si", "‡∑É‡∑Ä‡∂±‡∑ô‡∑É\u{dca} ‡∂ö‡∂Ω\u{dcf}‡∂¥‡∂∫"),
                        ("sv", "Savanes (region)"),
                        ("ta", "‡Æö‡Æµ‡Æ©‡Øá‡Æ∏\u{bcd} ‡Æ™‡Æï‡ØÅ‡Æ§‡Æø"),
                        ("te", "‡∞∏‡∞µ\u{c3e}‡∞®\u{c46}‡∞∏\u{c4d} ‡∞™\u{c4d}‡∞∞\u{c3e}‡∞Ç‡∞§‡∞Ç"),
                        ("th", "‡∏ã‡∏≤‡∏ß\u{e35}‡πÄ‡∏ô"),
                        ("tr", "Savanes"),
                        ("uk", "–†–µ–≥—ñ–æ–Ω –°–∞–≤–∞–Ω–Ω"),
                        ("ur", "ÿ≥ÿßŸàÿßŸÜ€åÿ≥ ÿπŸÑÿßŸÇ€Åÿå ŸπŸà⁄ØŸà"),
                        ("vi", "Savanes"),
                        ("zh", "ËçâÂéüÂçÄ"),
                    ]),
                    unofficial_name_list: ["Savannes"].to_vec(),
                },
            ),
        ])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "tg")]
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::TG,
        alpha3: Alpha3::TGO,
        address_format: None,
        continent: Continent::Africa,
        country_code: 228,
        currency_code: CurrencyCode::XOF,
        gec: Some(GEC::TO),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "00",
        ioc: Some(IOC::TOG),
        iso_long_name: "The Togolese Republic",
        iso_short_name: "Togo",
        official_language_list: ["fr"].to_vec(),
        spoken_language_list: ["fr"].to_vec(),
        national_destination_code_length_list: [2].to_vec(),
        national_number_length_list: [7].to_vec(),
        national_prefix: "None",
        nationality: Some("Togolese"),
        number: "768",
        postal_code: false,
        postal_code_format: None,
        region: Some(Region::Africa),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::WesternAfrica),
        un_locode: "TG",
        unofficial_name_list: ["Togo", "„Éà„Éº„Ç¥"].to_vec(),
        world_region: WorldRegion::EMEA,
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Togo"),
            ("af", "Togo"),
            ("ak", "Togo"),
            ("am", "·â∂·åé"),
            ("an", "Togo"),
            ("ar", "ÿ™Ÿàÿ∫Ÿà"),
            ("as", "‡¶ü‡ßã‡¶ó‡ßã"),
            ("ay", "Togo"),
            ("az", "Toqo"),
            ("ba", "Togo"),
            ("be", "–¢–æ–≥–∞"),
            ("bg", "–¢–æ–≥–æ"),
            ("bi", "Togo"),
            ("bn", "‡¶ü‡ßã‡¶ó‡ßã"),
            ("bn_IN", "‡¶ü‡ßã‡¶ó‡ßã"),
            ("br", "Togo"),
            ("bs", "Togo"),
            ("ca", "Togo"),
            ("ce", "–¢–æ–≥–æ"),
            ("ch", "Togo"),
            ("cs", "Togo"),
            ("cv", "–¢–æ–≥–æ"),
            ("cy", "Togo"),
            ("da", "Togo"),
            ("de", "Togo"),
            ("dv", "ﬁì\u{7af}ﬁé\u{7af}"),
            ("dz", "‡Ωä\u{f7c}‡ºã‡ΩÇ\u{f7c}‡ºç"),
            ("ee", "Togo"),
            ("el", "Œ§œåŒ≥Œ∫Œø"),
            ("en", "Togo"),
            ("eo", "Togo"),
            ("es", "Togo"),
            ("et", "Togo"),
            ("eu", "Togo"),
            ("fa", "ÿ™Ÿà⁄ØŸà"),
            ("ff", "Togo"),
            ("fi", "Togo"),
            ("fo", "Togo"),
            ("fr", "Togo"),
            ("fy", "Togo"),
            ("ga", "T√≥ga"),
            ("gl", "Togo"),
            ("gn", "Togo"),
            ("gu", "‡™ü‡´ã‡™ó‡´ã"),
            ("gv", "Yn Togo"),
            ("ha", "Togo"),
            ("he", "◊ò◊ï◊í◊ï"),
            ("hi", "‡§ü‡•ã‡§ó‡•ã"),
            ("hr", "Togo"),
            ("ht", "Togo"),
            ("hu", "Togo"),
            ("hy", "’è’∏’£’∏"),
            ("ia", "Togo"),
            ("id", "Togo"),
            ("io", "Togo"),
            ("is", "T√≥g√≥"),
            ("it", "Togo"),
            ("iu", "Togo"),
            ("ja", "„Éà„Éº„Ç¥"),
            ("ka", "·É¢·Éù·Éí·Éù"),
            ("ki", "Togo"),
            ("kk", "–¢–æ–≥–æ"),
            ("kl", "Togo"),
            ("km", "·ûè\u{17bc}·û†\u{17d2}·ûÇ·üÑ"),
            ("kn", "‡≤ü‡≥ã‡≤ó‡≥ã"),
            ("ko", "ÌÜ†Í≥†"),
            ("ku", "Togo"),
            ("kv", "Togo"),
            ("kw", "Togo"),
            ("ky", "–¢–æ–≥–æ"),
            ("lo", "Togo"),
            ("lt", "Togas"),
            ("lv", "Togo"),
            ("mi", "Toko"),
            ("mk", "–¢–æ–≥–æ"),
            ("ml", "‡¥ü‡µã‡¥ó‡µã"),
            ("mn", "–¢–æ–≥–æ"),
            ("mr", "‡§§‡•ã‡§ó‡•ã"),
            ("ms", "Togo"),
            ("mt", "Togo"),
            (
                "my",
                "·Äê\u{102d}\u{102f}·ÄÇ\u{102d}\u{102f}·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
            ),
            ("na", "Togo"),
            ("nb", "Togo"),
            ("ne", "‡§ü‡•ã‡§ó‡•ã"),
            ("nl", "Togo"),
            ("nn", "Togo"),
            ("nv", "Togo"),
            ("oc", "T√≤go"),
            ("or", "‡¨ü‡≠ã‡¨ó‡≠ã"),
            ("pa", "‡®ü\u{a4b}‡®ó\u{a4b}"),
            ("pi", "‡§ü‡•ã‡§ó‡•ã"),
            ("pl", "Togo"),
            ("ps", "Togo"),
            ("pt", "Togo"),
            ("pt_BR", "Togo"),
            ("ro", "Togo"),
            ("ru", "–¢–æ–≥–æ"),
            ("rw", "Togo"),
            ("sc", "Togo"),
            ("sd", "ŸΩŸà⁄ØŸà"),
            ("si", "‡∂ß‡∑ù‡∂ú‡∑ù"),
            ("sk", "Togo"),
            ("sl", "Togo"),
            ("so", "Toogo"),
            ("sq", "Togo"),
            ("sr", "–¢–æ–≥–æ"),
            ("sv", "Togo"),
            ("sw", "Togo"),
            ("ta", "‡Æü‡Øã‡Æï‡Øã"),
            ("te", "‡∞§\u{c4b}‡∞ó\u{c4b}"),
            ("tg", "–¢–æ–≥–æ"),
            ("th", "‡πÇ‡∏ï‡πÇ‡∏Å"),
            ("ti", "·â∂·åé"),
            ("tk", "Togolez"),
            ("tl", "Togo"),
            ("tr", "Togo"),
            ("tt", "–¢–æg–æ"),
            ("ug", "ÿ™Ÿà⁄ØŸà"),
            ("uk", "–¢–æ–≥–æ"),
            ("ur", "ŸπŸà⁄ØŸà"),
            ("uz", "Togo"),
            ("ve", "Togo"),
            ("vi", "T√¥-g√¥"),
            ("wa", "Togo"),
            ("wo", "Tog√≥o"),
            ("xh", "Togo"),
            ("yo", "T√≥g√≤"),
            ("zh_CN", "Â§öÂì•"),
            ("zh_HK", "Â§öÂì•"),
            ("zh_TW", "Â§öÂì•"),
            ("zu", "ITogo"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
