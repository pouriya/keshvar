// DO NOT TOUCH THIS FILE. (Auto-generated by `keshvar-code-generator/src/countries.rs`)

// The Principality of Liechtenstein

#[cfg(all(feature = "li", feature = "constants"))]
/// A module to access all constant country data for `The Principality of Liechtenstein`.
///
/// Note that to use this module, `constant` feature should be enabled.
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> = None;
    pub const ALPHA2: Alpha2 = Alpha2::LI;
    pub const ALPHA3: Alpha3 = Alpha3::LIE;
    pub const CONTINENT: Continent = Continent::Europe;
    pub const COUNTRY_CODE: usize = 423;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::CHF;
    pub const GEC: Option<GEC> = Some(GEC::LS);
    pub const INTERNATIONAL_PREFIX: &str = "00";
    pub const IOC: Option<IOC> = Some(IOC::LIE);
    pub const ISO_SHORT_NAME: &str = "Liechtenstein";
    pub const ISO_LONG_NAME: &str = "The Principality of Liechtenstein";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["de"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["de"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[2];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[7];
    pub const NATIONAL_PREFIX: &str = "None";
    pub const NATIONALITY: Option<&str> = Some("Liechtensteiner");
    pub const NUMBER: &str = "438";
    pub const POSTAL_CODE: bool = true;
    pub const POSTAL_CODE_FORMAT: Option<&str> = Some("948[5-9]|949[0-8]");
    pub const REGION: Option<Region> = Some(Region::Europe);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::WesternEurope);
    pub const UN_LOCODE: &str = "LI";
    pub const UNOFFICIAL_NAME_LIST: &[&str] = &["Liechtenstein", "リヒテンシュタイン"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::EMEA;
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Liechtenstein"),
        ("af", "Liechtenstein"),
        ("ak", "Liechtenstein"),
        ("am", "ሊክተንስታይን"),
        ("an", "Liechtenstein"),
        ("ar", "ليشتنشتاين"),
        ("as", "ল\u{9be}ইচেষ\u{9cd}টেইন"),
        ("ay", "Liechtenstein"),
        ("az", "Lixtenşteyn"),
        ("ba", "Liechtenstein"),
        ("be", "Ліхтэнштэйн"),
        ("bg", "Лихтенщайн"),
        ("bi", "Liechtenstein"),
        ("bn", "লিখতেনস\u{9cd}ট\u{9be}ইন"),
        ("bn_IN", "লিখতেনস\u{9cd}ট\u{9be}ইন"),
        ("br", "Liechtenstein"),
        ("bs", "Lihtenštajn"),
        ("ca", "Liechtenstein"),
        ("ce", "Лихтенштейн"),
        ("ch", "Liechtenstein"),
        ("cs", "Lichtenštejnsko"),
        ("cv", "Лихтенштейн"),
        ("cy", "Liechtenstein"),
        ("da", "Liechtenstein"),
        ("de", "Liechtenstein"),
        (
            "dv",
            "ލ\u{7a9}ޝ\u{7b0}ތ\u{7ac}ނ\u{7b0}ސ\u{7b0}ޓ\u{7a9}ނ\u{7b0}",
        ),
        ("dz", "ལ\u{f72}ཆ\u{f72}་ཊ\u{f7a}ནས\u{f72}་ཊ\u{f72}ན།"),
        ("ee", "Liechtenstein"),
        ("el", "Λίχτενσταϊν"),
        ("en", "Liechtenstein"),
        ("eo", "Liĥtenŝtejno"),
        ("es", "Liechtenstein"),
        ("et", "Liechtenstein"),
        ("eu", "Liechtenstein"),
        ("fa", "لیختن\u{200c}اشتاین"),
        ("ff", "Liechtenstein"),
        ("fi", "Liechtenstein"),
        ("fo", "Liktenstein"),
        ("fr", "Liechtenstein"),
        ("fy", "Lychtenstein"),
        ("ga", "Lichtinstéin"),
        ("gl", "Liechtenstein"),
        ("gn", "Liechtenstein"),
        ("gu", "લીચટ\u{ac7}ન\u{acd}સટાઇન"),
        ("gv", "Liechtenstein"),
        ("ha", "Liechtenstein"),
        ("he", "ליכטנשטיין"),
        ("hi", "लिक\u{94d}ट\u{947}न\u{94d}स\u{94d}टाइन"),
        ("hr", "Lihtenštajn"),
        ("ht", "Lichtènstayn"),
        ("hu", "Liechtenstein"),
        ("hy", "Լիխտենշտեյն"),
        ("ia", "Liechtenstein"),
        ("id", "Liechtenstein"),
        ("io", "Liechtenstein"),
        ("is", "Liechtenstein"),
        ("it", "Liechtenstein"),
        ("iu", "Liechtenstein"),
        ("ja", "リヒテンシュタイン"),
        ("ka", "ლიხტენშტეინი"),
        ("ki", "Liechtenstein"),
        ("kk", "Лихтенштейн"),
        ("kl", "Liechtenstein"),
        ("km", "ល\u{17b7}ចទេនស\u{17d2}តែន"),
        ("kn", "ಲ\u{cc6}ಷ\u{ccd}ಟ\u{cc6}ಂಸ\u{ccd}ಟ\u{cc6}ನ\u{ccd}"),
        ("ko", "리히텐슈타인"),
        ("ku", "Lihtenstayn"),
        ("kv", "Лихтенштейн"),
        ("kw", "Liechtenstein"),
        ("ky", "Лихтенштейн"),
        ("lo", "ປະເທດລ\u{eb4}ກເຕນສະຕາຍ"),
        ("lt", "Lichtenšteinas"),
        ("lv", "Lihtenšteina"),
        ("mi", "Rīkeneteina"),
        ("mk", "Линхештајн"),
        ("ml", "ലിചെസ\u{d4d}റ\u{d4d}റൈന\u{d4d}\u{200d}"),
        ("mn", "Лейхтенштайн"),
        ("mr", "लायक\u{947}नस\u{94d}टिन"),
        ("ms", "Liechtenstein"),
        ("mt", "Liechtenstein"),
        (
            "my",
            "လစ\u{103a}တန\u{103a}စတ\u{102d}န\u{103a}းန\u{102d}\u{102f}င\u{103a}င\u{1036}",
        ),
        ("na", "Riketentein"),
        ("nb", "Liechtenstein"),
        ("ne", "लिचट\u{947}न\u{94d}सटाइन"),
        ("nl", "Liechtenstein"),
        ("nn", "Liechtenstein"),
        ("nv", "Łííhtensain"),
        ("oc", "Liechtenstein"),
        ("or", "ଲ\u{b3f}ଚେଂଷ\u{b4d}ଟ\u{b3e}ଇନ"),
        ("pa", "ਲੀਚਟੀਨੀਆ"),
        ("pi", "लिक\u{94d}टनस\u{94d}ट\u{948}न"),
        ("pl", "Liechtenstein"),
        ("ps", "Liechtenstein"),
        ("pt", "Liechtenstein"),
        ("pt_BR", "Liechtenstein"),
        ("ro", "Liechtenstein"),
        ("ru", "Лихтенштейн"),
        ("rw", "Liyeshitensiteyine"),
        ("sc", "Liechtenstein"),
        ("sd", "Liechtenstein"),
        ("si", "ල\u{dd2}ච\u{dca}ටෙන\u{dca}ස\u{dca}ටය\u{dd2}න\u{dca}"),
        ("sk", "Lichtenštajnsko"),
        ("sl", "Lihtenštajn"),
        ("so", "Liechtenstein"),
        ("sq", "Lihtenshtejn"),
        ("sr", "Лихтенштајн"),
        ("sv", "Liechtenstein"),
        ("sw", "Liechtenstein"),
        ("ta", "ல\u{bc0}ச\u{bcd}சென\u{bcd}சுத\u{bc0}ன\u{bcd}"),
        ("te", "ల\u{c3e}యక\u{c47}నస\u{c4d}ట\u{c3f}న"),
        ("tg", "Лихтенштейн"),
        ("th", "ล\u{e34}กเตนสไตน\u{e4c}"),
        ("ti", "Liechtenstein"),
        ("tk", "Lihtenşteýn"),
        ("tl", "Liechtenstein"),
        ("tr", "Lihtenştayn"),
        ("tt", "Лиһтенстеин"),
        ("ug", "لىچتېنشتېين"),
        ("uk", "Ліхтенштейн"),
        ("ur", "لیختینستائن"),
        ("uz", "Lixtenshteyn"),
        ("ve", "Liechtenstein"),
        ("vi", "Likh-ten-xtainh"),
        ("wa", "Lîchtensteyn"),
        ("wo", "Liechtenstein"),
        ("xh", "Liechtenstein"),
        ("yo", "Líktẹ\u{301}nstáìnì"),
        ("zh_CN", "列支敦士登"),
        ("zh_HK", "列支敦士登"),
        ("zh_TW", "列支敦斯登"),
        ("zu", "Liechtenstein"),
    ];
    #[cfg(all(feature = "li", feature = "geo", feature = "constants"))]
    /// GEO data as constants
    pub mod geo {
        pub const LATITUDE: f64 = 47.166;
        pub const LONGITUDE: f64 = 9.555373;
        pub const MAX_LATITUDE: f64 = 47.2705467;
        pub const MAX_LONGITUDE: f64 = 9.6356501;
        pub const MIN_LATITUDE: f64 = 47.04828999999999;
        pub const MIN_LONGITUDE: f64 = 9.47162;
        pub const NORTHEAST_LATITUDE: f64 = 47.2705467;
        pub const NORTHEAST_LONGITUDE: f64 = 9.6356501;
        pub const SOUTHWEST_LATITUDE: f64 = 47.04828999999999;
        pub const SOUTHWEST_LONGITUDE: f64 = 9.47162;
    }
}
#[cfg(all(feature = "li", feature = "geo"))]
/// GEO module for this country.
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    /// GEO information for this country.
    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: 47.166,
            longitude: 9.555373,
            max_latitude: 47.2705467,
            max_longitude: 9.6356501,
            min_latitude: 47.04828999999999,
            min_longitude: 9.47162,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: 47.2705467,
                    longitude: 9.6356501,
                },
                southwest: CountryGeoBound {
                    latitude: 47.04828999999999,
                    longitude: 9.47162,
                },
            },
        }
    }
}

#[cfg(all(feature = "li", feature = "subdivisions"))]
/// Subdivision module for this country.
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    /// Subdivisions for this country.
    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([
            (
                "01",
                Subdivision {
                    name: "Balzers",
                    country_alpha2: Alpha2::LI,
                    code: "01",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.06887),
                        longitude: Some(9.50704),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "بالزرس"),
                        ("az", "Balçers"),
                        ("be", "Бальцэрс"),
                        ("ca", "Balzers"),
                        ("ccp", "𑄝\u{11127}𑄣\u{11134}𑄎𑄢\u{11134}𑄌\u{11134}"),
                        ("ceb", "Balzers (munisipyo)"),
                        ("cs", "Balzers"),
                        ("da", "Balzers"),
                        ("de", "Balzers"),
                        ("en", "Balzers"),
                        ("es", "Balzers"),
                        ("eu", "Balzers"),
                        ("fa", "بالزرس"),
                        ("fi", "Balzers"),
                        ("fr", "Balzers"),
                        ("gl", "Balzers"),
                        ("he", "בלצרס"),
                        ("hr", "Balzers"),
                        ("id", "Balzers"),
                        ("it", "Balzers"),
                        ("ja", "バルザース"),
                        ("ko", "발처스"),
                        ("lt", "Balcersas"),
                        ("mk", "Балцерс"),
                        ("ms", "Balzers"),
                        ("nb", "Balzers"),
                        ("nl", "Balzers"),
                        ("no", "Balzers"),
                        ("pl", "Balzers"),
                        ("pt", "Balzers"),
                        ("ru", "Бальцерс"),
                        ("sk", "Balzers"),
                        ("sv", "Balzers"),
                        ("tr", "Balzers"),
                        ("uk", "Бальцерс"),
                        ("zh", "巴尔采斯"),
                    ]),
                    unofficial_name_list: ["Balzers"].to_vec(),
                },
            ),
            (
                "02",
                Subdivision {
                    name: "Eschen",
                    country_alpha2: Alpha2::LI,
                    code: "02",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.21239),
                        longitude: Some(9.52327),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("az", "Eşen"),
                        ("be", "Эшэн"),
                        ("ca", "Eschen"),
                        ("ccp", "𑄃\u{11128}𑄌\u{11134}𑄌𑄬𑄚\u{11134}"),
                        ("ceb", "Eschen (kapital sa munisipyo)"),
                        ("cs", "Eschen"),
                        ("da", "Eschen"),
                        ("de", "Eschen"),
                        ("el", "Έσκεν"),
                        ("en", "Eschen"),
                        ("es", "Eschen"),
                        ("eu", "Eschen"),
                        ("fa", "اشن"),
                        ("fi", "Eschen"),
                        ("fr", "Eschen"),
                        ("gl", "Eschen"),
                        ("he", "אשן"),
                        ("hu", "Eschen"),
                        ("id", "Eschen"),
                        ("it", "Eschen"),
                        ("ja", "エッシェン"),
                        ("ko", "에셴"),
                        ("lt", "Ešenas"),
                        ("mk", "Ешен"),
                        ("ms", "Eschen"),
                        ("nb", "Eschen"),
                        ("nl", "Eschen"),
                        ("no", "Eschen"),
                        ("pl", "Eschen"),
                        ("pt", "Eschen"),
                        ("ru", "Эшен"),
                        ("sk", "Eschen"),
                        ("sv", "Eschen"),
                        ("th", "เอสเช\u{e34}น"),
                        ("tr", "Eschen"),
                        ("uk", "Ешен"),
                        ("zh", "埃申"),
                    ]),
                    unofficial_name_list: ["Eschen"].to_vec(),
                },
            ),
            (
                "03",
                Subdivision {
                    name: "Gamprin",
                    country_alpha2: Alpha2::LI,
                    code: "03",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.2196376),
                        longitude: Some(9.5129295),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("be", "Гампрын"),
                        ("ca", "Gamprin"),
                        ("ccp", "𑄉𑄟\u{11134}𑄛\u{11133}𑄢\u{11128}𑄚\u{11134}"),
                        ("ceb", "Gamprin (kapital sa munisipyo sa Liechtenstein)"),
                        ("cs", "Gamprin"),
                        ("da", "Gamprin"),
                        ("de", "Gamprin"),
                        ("en", "Gamprin"),
                        ("es", "Gamprin"),
                        ("eu", "Gamprin"),
                        ("fa", "گمپخین"),
                        ("fr", "Gamprin"),
                        ("gl", "Gamprin"),
                        ("he", "גמפרין"),
                        ("hy", "Գամպրին"),
                        ("id", "Gamprin"),
                        ("it", "Gamprin"),
                        ("ja", "ガンプリン"),
                        ("ko", "감프린"),
                        ("lt", "Gamprinas"),
                        ("mk", "Гамприн"),
                        ("ms", "Gamprin"),
                        ("nb", "Gamprin"),
                        ("nl", "Gamprin"),
                        ("no", "Gamprin"),
                        ("pl", "Gamprin"),
                        ("pt", "Gamprin"),
                        ("ru", "Гамприн"),
                        ("sk", "Gamprin"),
                        ("sv", "Gamprin"),
                        ("th", "ก\u{e31}มพร\u{e34}น"),
                        ("tr", "Gamprin"),
                        ("uk", "Гампрін"),
                        ("ur", "گامپرین"),
                        ("zh", "甘普林"),
                    ]),
                    unofficial_name_list: ["Gamprin"].to_vec(),
                },
            ),
            (
                "04",
                Subdivision {
                    name: "Mauren",
                    country_alpha2: Alpha2::LI,
                    code: "04",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.21937),
                        longitude: Some(9.54322),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("be", "Маўрэн"),
                        ("ca", "Mauren"),
                        ("ccp", "𑄟\u{1112f}𑄢𑄬𑄚\u{11134}"),
                        ("ceb", "Mauren (kapital sa munisipyo)"),
                        ("cs", "Mauren"),
                        ("da", "Mauren"),
                        ("de", "Mauren"),
                        ("en", "Mauren"),
                        ("es", "Mauren"),
                        ("eu", "Mauren"),
                        ("fa", "ماوقن"),
                        ("fr", "Mauren"),
                        ("gl", "Mauren"),
                        ("he", "מאורן"),
                        ("id", "Mauren"),
                        ("it", "Mauren"),
                        ("ja", "マウレン"),
                        ("ko", "마우렌"),
                        ("lt", "Maurenas"),
                        ("mk", "Маурен"),
                        ("ms", "Mauren"),
                        ("nb", "Mauren"),
                        ("nl", "Mauren"),
                        ("no", "Mauren"),
                        ("pl", "Mauren"),
                        ("pt", "Mauren"),
                        ("ru", "Маурен"),
                        ("sk", "Mauren"),
                        ("sv", "Mauren"),
                        ("th", "เมาเร\u{e34}น"),
                        ("uk", "Маурен"),
                        ("ur", "ماویرن"),
                        ("zh", "毛伦"),
                    ]),
                    unofficial_name_list: ["Mauren"].to_vec(),
                },
            ),
            (
                "05",
                Subdivision {
                    name: "Planken",
                    country_alpha2: Alpha2::LI,
                    code: "05",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.1855315),
                        longitude: Some(9.545365),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("be", "Планкен"),
                        ("ca", "Planken"),
                        ("ccp", "𑄛\u{11133}𑄣\u{11101}𑄇𑄬𑄚\u{11134}"),
                        ("ceb", "Planken (kapital sa munisipyo)"),
                        ("cs", "Planken"),
                        ("da", "Planken"),
                        ("de", "Planken"),
                        ("en", "Planken"),
                        ("es", "Planken"),
                        ("eu", "Planken"),
                        ("fa", "پلنکن"),
                        ("fi", "Planken"),
                        ("fr", "Planken"),
                        ("gl", "Planken"),
                        ("he", "פלנקן"),
                        ("id", "Planken"),
                        ("it", "Planken"),
                        ("ja", "プランケン"),
                        ("ko", "플랑켄"),
                        ("lt", "Plankenas"),
                        ("mk", "Планкен"),
                        ("nb", "Planken"),
                        ("nl", "Planken"),
                        ("no", "Planken"),
                        ("pl", "Planken"),
                        ("pt", "Planken"),
                        ("ru", "Планкен"),
                        ("sk", "Planken"),
                        ("sv", "Planken"),
                        ("th", "พล\u{e31}งเค\u{e34}น"),
                        ("uk", "Планкен"),
                        ("ur", "پلنکین"),
                        ("zh", "普兰肯"),
                    ]),
                    unofficial_name_list: ["Planken"].to_vec(),
                },
            ),
            (
                "06",
                Subdivision {
                    name: "Ruggell",
                    country_alpha2: Alpha2::LI,
                    code: "06",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.2401202),
                        longitude: Some(9.526255299999999),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "روغل"),
                        ("be", "Ругель"),
                        ("ca", "Ruggell"),
                        ("ccp", "𑄢\u{1112a}𑄉𑄬𑄣\u{11134}"),
                        ("ceb", "Ruggell (kapital sa munisipyo)"),
                        ("cs", "Ruggell"),
                        ("da", "Ruggell"),
                        ("de", "Ruggell"),
                        ("el", "Ρούγκελ"),
                        ("en", "Ruggell"),
                        ("es", "Ruggell"),
                        ("eu", "Ruggell"),
                        ("fa", "روگل"),
                        ("fr", "Ruggell"),
                        ("gl", "Ruggell"),
                        ("he", "רוגל"),
                        ("id", "Ruggell"),
                        ("it", "Ruggell"),
                        ("ja", "ルッゲル"),
                        ("ko", "루겔"),
                        ("lt", "Rugelis"),
                        ("mk", "Ругел"),
                        ("nb", "Ruggell"),
                        ("nl", "Ruggell"),
                        ("no", "Ruggell"),
                        ("pl", "Ruggell"),
                        ("pt", "Ruggell"),
                        ("ru", "Руггелль"),
                        ("sk", "Ruggell"),
                        ("sv", "Ruggell"),
                        ("th", "ร\u{e38}กเก\u{e34}ลล\u{e4c}"),
                        ("uk", "Руґґель"),
                        ("zh", "儒格尔"),
                    ]),
                    unofficial_name_list: ["Ruggel"].to_vec(),
                },
            ),
            (
                "07",
                Subdivision {
                    name: "Schaan",
                    country_alpha2: Alpha2::LI,
                    code: "07",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.16638529999999),
                        longitude: Some(9.5106746),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "شان ، ليختنشتاين"),
                        ("az", "Şan"),
                        ("be", "Горад Шан"),
                        ("bg", "Шаан"),
                        ("ca", "Schaan"),
                        ("ccp", "𑄌\u{11133}𑄇𑄚\u{11134}"),
                        ("ceb", "Schaan (kapital sa munisipyo)"),
                        ("cs", "Schaan"),
                        ("cy", "Schaan"),
                        ("da", "Schaan"),
                        ("de", "Schaan"),
                        ("el", "Σάαν"),
                        ("en", "Schaan"),
                        ("es", "Schaan"),
                        ("eu", "Schaan"),
                        ("fa", "شان"),
                        ("fi", "Schaan"),
                        ("fr", "Schaan"),
                        ("gl", "Schaan"),
                        ("he", "שאן"),
                        ("hu", "Schaan"),
                        ("id", "Schaan"),
                        ("it", "Schaan"),
                        ("ja", "シャーン"),
                        ("ko", "샨"),
                        ("lt", "Šanas"),
                        ("mk", "Шан"),
                        ("mn", "Шаан"),
                        ("nb", "Schaan"),
                        ("nl", "Schaan"),
                        ("no", "Schaan"),
                        ("pl", "Schaan"),
                        ("pt", "Schaan"),
                        ("ro", "Schaan"),
                        ("ru", "Шан"),
                        ("sk", "Schaan"),
                        ("sr", "Шан"),
                        ("sr_Latn", "Šan"),
                        ("sv", "Schaan"),
                        ("th", "ชาน"),
                        ("tr", "Schaan"),
                        ("uk", "Шан"),
                        ("ur", "شان، لیختینستائن"),
                        ("vi", "Schaan"),
                        ("zh", "沙恩"),
                    ]),
                    unofficial_name_list: ["Schaan"].to_vec(),
                },
            ),
            (
                "08",
                Subdivision {
                    name: "Schellenberg",
                    country_alpha2: Alpha2::LI,
                    code: "08",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.23968439999999),
                        longitude: Some(9.5511955),
                        max_latitude: Some(47.25243),
                        min_latitude: Some(47.2241401),
                        max_longitude: Some(9.56735),
                        min_longitude: Some(9.52844),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("be", "Шэленберг"),
                        ("ca", "Schellenberg"),
                        ("ccp", "𑄌\u{11133}𑄇𑄬𑄣𑄬𑄚\u{11134}𑄝𑄢\u{11134}𑄇\u{11134}"),
                        ("ceb", "Schellenberg"),
                        ("cs", "Schellenberg"),
                        ("da", "Schellenberg"),
                        ("de", "Schellenberg"),
                        ("el", "Σέλενμπεργκ"),
                        ("en", "Schellenberg"),
                        ("es", "Schellenberg"),
                        ("eu", "Schellenberg"),
                        ("fa", "شلنبرگ"),
                        ("fi", "Schellenberg"),
                        ("fr", "Schellenberg"),
                        ("gl", "Schellenberg"),
                        ("he", "שלנברג"),
                        ("hu", "Schellenberg"),
                        ("id", "Schellenberg"),
                        ("it", "Schellenberg"),
                        ("ja", "シェレンベルク"),
                        ("ko", "셸렌베르크"),
                        ("lt", "Šelenbergas"),
                        ("mk", "Шеленберг"),
                        ("nb", "Schellenberg"),
                        ("nl", "Schellenberg"),
                        ("no", "Schellenberg"),
                        ("pl", "Schellenberg"),
                        ("pt", "Schellenberg"),
                        ("ro", "Schellenberg"),
                        ("ru", "Шелленберг"),
                        ("sk", "Schellenberg"),
                        ("sv", "Schellenberg"),
                        ("th", "เชลเลนแบร\u{e4c}ก"),
                        ("uk", "Шелленберг"),
                        ("ur", "شلنبرگ"),
                        ("zh", "施伦贝格"),
                    ]),
                    unofficial_name_list: ["Schellenberg"].to_vec(),
                },
            ),
            (
                "09",
                Subdivision {
                    name: "Triesen",
                    country_alpha2: Alpha2::LI,
                    code: "09",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.1111739),
                        longitude: Some(9.5264091),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("az", "Trizen"),
                        ("be", "Трызен"),
                        ("ca", "Triesen"),
                        ("ccp", "𑄑\u{11133}𑄢\u{1112d}𑄥𑄬𑄚\u{11134}"),
                        ("ceb", "Triesen (munisipyo)"),
                        ("cs", "Triesen"),
                        ("da", "Triesen"),
                        ("de", "Triesen"),
                        ("el", "Τρίσεν"),
                        ("en", "Triesen"),
                        ("es", "Triesen"),
                        ("eu", "Triesen"),
                        ("fa", "تخیزن"),
                        ("fi", "Triesen"),
                        ("fr", "Triesen"),
                        ("gl", "Triesen"),
                        ("he", "טריזן"),
                        ("hu", "Triesen"),
                        ("id", "Triesen"),
                        ("it", "Triesen"),
                        ("ja", "トリーゼン"),
                        ("ko", "트리젠"),
                        ("lt", "Tryzenas"),
                        ("mk", "Тризен"),
                        ("nb", "Triesen"),
                        ("nl", "Triesen"),
                        ("no", "Triesen"),
                        ("pl", "Triesen"),
                        ("pt", "Triesen"),
                        ("ru", "Тризен"),
                        ("sk", "Triesen"),
                        ("sv", "Triesen"),
                        ("uk", "Трізен"),
                        ("zh", "特里森"),
                    ]),
                    unofficial_name_list: ["Triesen"].to_vec(),
                },
            ),
            (
                "10",
                Subdivision {
                    name: "Triesenberg",
                    country_alpha2: Alpha2::LI,
                    code: "10",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.1173252),
                        longitude: Some(9.544181199999999),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("be", "Трызенберг"),
                        ("ca", "Triesenberg"),
                        (
                            "ccp",
                            "𑄑\u{11133}𑄢\u{1112d}𑄥𑄬𑄚\u{11134}𑄝𑄢\u{11134}𑄇\u{11134}",
                        ),
                        ("ceb", "Triesenberg (kapital sa munisipyo)"),
                        ("da", "Triesenberg"),
                        ("de", "Triesenberg"),
                        ("el", "Τρίζενμπεργκ"),
                        ("en", "Triesenberg"),
                        ("es", "Triesenberg"),
                        ("et", "Triesenberg"),
                        ("eu", "Triesenberg"),
                        ("fa", "تخیزنبرگ"),
                        ("fi", "Triesenberg"),
                        ("fr", "Triesenberg"),
                        ("gl", "Triesenberg"),
                        ("he", "טריזנברג"),
                        ("id", "Triesenberg"),
                        ("it", "Triesenberg"),
                        ("ja", "トリーゼンベルク"),
                        ("ko", "트리젠베르크"),
                        ("lt", "Tryzenbergas"),
                        ("mk", "Тризенберг"),
                        ("nb", "Triesenberg"),
                        ("nl", "Triesenberg"),
                        ("no", "Triesenberg"),
                        ("pl", "Triesenberg"),
                        ("pt", "Triesenberg"),
                        ("ru", "Тризенберг"),
                        ("sk", "Triesenberg"),
                        ("sr", "Тризенберг"),
                        ("sr_Latn", "Trizenberg"),
                        ("sv", "Triesenberg"),
                        ("th", "ทร\u{e35}เซ\u{e34}นแบร\u{e4c}ก"),
                        ("uk", "Трізенберг"),
                        ("zh", "特里森貝格"),
                    ]),
                    unofficial_name_list: ["Triesenberg"].to_vec(),
                },
            ),
            (
                "11",
                Subdivision {
                    name: "Vaduz",
                    country_alpha2: Alpha2::LI,
                    code: "11",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(47.14136999999999),
                        longitude: Some(9.5207),
                        max_latitude: None,
                        min_latitude: None,
                        max_longitude: None,
                        min_longitude: None,
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Commune,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("af", "Vaduz"),
                        ("am", "ፋዱጽ"),
                        ("ar", "فادوتس"),
                        ("az", "Vaduts"),
                        ("be", "Горад Вадуц"),
                        ("bg", "Вадуц"),
                        ("bn", "ফ\u{9be}ড\u{9c1}ৎস"),
                        ("bs", "Vaduz"),
                        ("ca", "Vaduz"),
                        ("ccp", "𑄞𑄓\u{1112a}𑄌\u{11134}"),
                        ("ceb", "Vaduz"),
                        ("cs", "Vaduz"),
                        ("cy", "Vaduz"),
                        ("da", "Vaduz"),
                        ("de", "Vaduz"),
                        ("el", "Βαντούζ"),
                        ("en", "Vaduz"),
                        ("es", "Vaduz"),
                        ("et", "Vaduz"),
                        ("eu", "Vaduz"),
                        ("fa", "فادوتس"),
                        ("fi", "Vaduz"),
                        ("fr", "Vaduz"),
                        ("ga", "Vadús"),
                        ("gl", "Vaduz"),
                        ("gu", "વાદ\u{ac1}ઝ"),
                        ("he", "ואדוץ"),
                        ("hi", "वाद\u{941}ज\u{93c}"),
                        ("hr", "Vaduz"),
                        ("hu", "Vaduz"),
                        ("hy", "Վադուց"),
                        ("id", "Vaduz"),
                        ("is", "Vaduz"),
                        ("it", "Vaduz"),
                        ("ja", "ファドゥーツ"),
                        ("ka", "ვადუცი"),
                        ("kk", "Вадуц"),
                        ("kn", "ವಾಡಝ\u{ccd}"),
                        ("ko", "파두츠"),
                        ("ky", "Вадуц"),
                        ("lt", "Vaducas"),
                        ("lv", "Vaduca"),
                        ("mk", "Вадуц"),
                        ("ml", "വ\u{d3e}ട\u{d41}സ\u{d4d}"),
                        ("mn", "Вадуц"),
                        ("mr", "फाड\u{941}ट\u{94d}स"),
                        ("ms", "Vaduz"),
                        ("nb", "Vaduz"),
                        ("nl", "Vaduz"),
                        ("no", "Vaduz"),
                        ("pa", "ਫ\u{a3c}ਾਦ\u{a41}ਤਸ"),
                        ("pl", "Vaduz"),
                        ("pt", "Vaduz"),
                        ("ro", "Vaduz"),
                        ("ru", "Вадуц"),
                        ("si", "වඩ\u{dd4}ස\u{dca}"),
                        ("sk", "Vaduz"),
                        ("sl", "Vaduz"),
                        ("sq", "Vaduz"),
                        ("sr", "Вадуц"),
                        ("sr_Latn", "Vaduc"),
                        ("sv", "Vaduz"),
                        ("sw", "Vaduz"),
                        ("ta", "வ\u{bbe}தூசு"),
                        ("te", "వ\u{c3e}డూజ\u{c4d}"),
                        ("th", "วาด\u{e38}ซ"),
                        ("tk", "Waduz"),
                        ("tr", "Vaduz"),
                        ("uk", "Вадуц"),
                        ("ur", "واڈوز"),
                        ("uz", "Vaduz"),
                        ("vi", "Vaduz"),
                        ("yo", "Vaduz"),
                        ("yo_BJ", "Vaduz"),
                        ("yue", "華杜茲"),
                        ("yue_Hans", "华杜兹"),
                        ("zh", "瓦都茲"),
                    ]),
                    unofficial_name_list: ["Vaduz"].to_vec(),
                },
            ),
        ])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "li")]
/// [`Country`](crate::Country) struct for this country.
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::LI,
        alpha3: Alpha3::LIE,
        address_format: None,
        continent: Continent::Europe,
        country_code: 423,
        currency_code: CurrencyCode::CHF,
        gec: Some(GEC::LS),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "00",
        ioc: Some(IOC::LIE),
        iso_long_name: "The Principality of Liechtenstein",
        iso_short_name: "Liechtenstein",
        official_language_list: ["de"].to_vec(),
        spoken_language_list: ["de"].to_vec(),
        national_destination_code_length_list: [2].to_vec(),
        national_number_length_list: [7].to_vec(),
        national_prefix: "None",
        nationality: Some("Liechtensteiner"),
        number: "438",
        postal_code: true,
        postal_code_format: Some("948[5-9]|949[0-8]"),
        region: Some(Region::Europe),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::WesternEurope),
        un_locode: "LI",
        unofficial_name_list: ["Liechtenstein", "リヒテンシュタイン"].to_vec(),
        world_region: WorldRegion::EMEA,
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Liechtenstein"),
            ("af", "Liechtenstein"),
            ("ak", "Liechtenstein"),
            ("am", "ሊክተንስታይን"),
            ("an", "Liechtenstein"),
            ("ar", "ليشتنشتاين"),
            ("as", "ল\u{9be}ইচেষ\u{9cd}টেইন"),
            ("ay", "Liechtenstein"),
            ("az", "Lixtenşteyn"),
            ("ba", "Liechtenstein"),
            ("be", "Ліхтэнштэйн"),
            ("bg", "Лихтенщайн"),
            ("bi", "Liechtenstein"),
            ("bn", "লিখতেনস\u{9cd}ট\u{9be}ইন"),
            ("bn_IN", "লিখতেনস\u{9cd}ট\u{9be}ইন"),
            ("br", "Liechtenstein"),
            ("bs", "Lihtenštajn"),
            ("ca", "Liechtenstein"),
            ("ce", "Лихтенштейн"),
            ("ch", "Liechtenstein"),
            ("cs", "Lichtenštejnsko"),
            ("cv", "Лихтенштейн"),
            ("cy", "Liechtenstein"),
            ("da", "Liechtenstein"),
            ("de", "Liechtenstein"),
            (
                "dv",
                "ލ\u{7a9}ޝ\u{7b0}ތ\u{7ac}ނ\u{7b0}ސ\u{7b0}ޓ\u{7a9}ނ\u{7b0}",
            ),
            ("dz", "ལ\u{f72}ཆ\u{f72}་ཊ\u{f7a}ནས\u{f72}་ཊ\u{f72}ན།"),
            ("ee", "Liechtenstein"),
            ("el", "Λίχτενσταϊν"),
            ("en", "Liechtenstein"),
            ("eo", "Liĥtenŝtejno"),
            ("es", "Liechtenstein"),
            ("et", "Liechtenstein"),
            ("eu", "Liechtenstein"),
            ("fa", "لیختن\u{200c}اشتاین"),
            ("ff", "Liechtenstein"),
            ("fi", "Liechtenstein"),
            ("fo", "Liktenstein"),
            ("fr", "Liechtenstein"),
            ("fy", "Lychtenstein"),
            ("ga", "Lichtinstéin"),
            ("gl", "Liechtenstein"),
            ("gn", "Liechtenstein"),
            ("gu", "લીચટ\u{ac7}ન\u{acd}સટાઇન"),
            ("gv", "Liechtenstein"),
            ("ha", "Liechtenstein"),
            ("he", "ליכטנשטיין"),
            ("hi", "लिक\u{94d}ट\u{947}न\u{94d}स\u{94d}टाइन"),
            ("hr", "Lihtenštajn"),
            ("ht", "Lichtènstayn"),
            ("hu", "Liechtenstein"),
            ("hy", "Լիխտենշտեյն"),
            ("ia", "Liechtenstein"),
            ("id", "Liechtenstein"),
            ("io", "Liechtenstein"),
            ("is", "Liechtenstein"),
            ("it", "Liechtenstein"),
            ("iu", "Liechtenstein"),
            ("ja", "リヒテンシュタイン"),
            ("ka", "ლიხტენშტეინი"),
            ("ki", "Liechtenstein"),
            ("kk", "Лихтенштейн"),
            ("kl", "Liechtenstein"),
            ("km", "ល\u{17b7}ចទេនស\u{17d2}តែន"),
            ("kn", "ಲ\u{cc6}ಷ\u{ccd}ಟ\u{cc6}ಂಸ\u{ccd}ಟ\u{cc6}ನ\u{ccd}"),
            ("ko", "리히텐슈타인"),
            ("ku", "Lihtenstayn"),
            ("kv", "Лихтенштейн"),
            ("kw", "Liechtenstein"),
            ("ky", "Лихтенштейн"),
            ("lo", "ປະເທດລ\u{eb4}ກເຕນສະຕາຍ"),
            ("lt", "Lichtenšteinas"),
            ("lv", "Lihtenšteina"),
            ("mi", "Rīkeneteina"),
            ("mk", "Линхештајн"),
            ("ml", "ലിചെസ\u{d4d}റ\u{d4d}റൈന\u{d4d}\u{200d}"),
            ("mn", "Лейхтенштайн"),
            ("mr", "लायक\u{947}नस\u{94d}टिन"),
            ("ms", "Liechtenstein"),
            ("mt", "Liechtenstein"),
            (
                "my",
                "လစ\u{103a}တန\u{103a}စတ\u{102d}န\u{103a}းန\u{102d}\u{102f}င\u{103a}င\u{1036}",
            ),
            ("na", "Riketentein"),
            ("nb", "Liechtenstein"),
            ("ne", "लिचट\u{947}न\u{94d}सटाइन"),
            ("nl", "Liechtenstein"),
            ("nn", "Liechtenstein"),
            ("nv", "Łííhtensain"),
            ("oc", "Liechtenstein"),
            ("or", "ଲ\u{b3f}ଚେଂଷ\u{b4d}ଟ\u{b3e}ଇନ"),
            ("pa", "ਲੀਚਟੀਨੀਆ"),
            ("pi", "लिक\u{94d}टनस\u{94d}ट\u{948}न"),
            ("pl", "Liechtenstein"),
            ("ps", "Liechtenstein"),
            ("pt", "Liechtenstein"),
            ("pt_BR", "Liechtenstein"),
            ("ro", "Liechtenstein"),
            ("ru", "Лихтенштейн"),
            ("rw", "Liyeshitensiteyine"),
            ("sc", "Liechtenstein"),
            ("sd", "Liechtenstein"),
            ("si", "ල\u{dd2}ච\u{dca}ටෙන\u{dca}ස\u{dca}ටය\u{dd2}න\u{dca}"),
            ("sk", "Lichtenštajnsko"),
            ("sl", "Lihtenštajn"),
            ("so", "Liechtenstein"),
            ("sq", "Lihtenshtejn"),
            ("sr", "Лихтенштајн"),
            ("sv", "Liechtenstein"),
            ("sw", "Liechtenstein"),
            ("ta", "ல\u{bc0}ச\u{bcd}சென\u{bcd}சுத\u{bc0}ன\u{bcd}"),
            ("te", "ల\u{c3e}యక\u{c47}నస\u{c4d}ట\u{c3f}న"),
            ("tg", "Лихтенштейн"),
            ("th", "ล\u{e34}กเตนสไตน\u{e4c}"),
            ("ti", "Liechtenstein"),
            ("tk", "Lihtenşteýn"),
            ("tl", "Liechtenstein"),
            ("tr", "Lihtenştayn"),
            ("tt", "Лиһтенстеин"),
            ("ug", "لىچتېنشتېين"),
            ("uk", "Ліхтенштейн"),
            ("ur", "لیختینستائن"),
            ("uz", "Lixtenshteyn"),
            ("ve", "Liechtenstein"),
            ("vi", "Likh-ten-xtainh"),
            ("wa", "Lîchtensteyn"),
            ("wo", "Liechtenstein"),
            ("xh", "Liechtenstein"),
            ("yo", "Líktẹ\u{301}nstáìnì"),
            ("zh_CN", "列支敦士登"),
            ("zh_HK", "列支敦士登"),
            ("zh_TW", "列支敦斯登"),
            ("zu", "Liechtenstein"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
