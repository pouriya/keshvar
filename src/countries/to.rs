// DO NOT TOUCH THIS FILE. (Auto-generated by `keshvar-code-generator/src/countries.rs`)

// The Kingdom of Tonga

#[cfg(all(feature = "to", feature = "constants"))]
/// A module to access all constant country data for `The Kingdom of Tonga`.
///
/// Note that to use this module, `constant` feature should be enabled.
pub mod consts {
    #[allow(unused_imports)]
    use crate::{
        Alpha2, Alpha3, Continent, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC, IOC,
    };

    pub const ADDRESS_FORMAT: Option<&str> = None;
    pub const ALPHA2: Alpha2 = Alpha2::TO;
    pub const ALPHA3: Alpha3 = Alpha3::TON;
    pub const CONTINENT: Continent = Continent::Australia;
    pub const COUNTRY_CODE: usize = 676;
    pub const CURRENCY_CODE: CurrencyCode = CurrencyCode::TOP;
    pub const GEC: Option<GEC> = Some(GEC::TN);
    pub const INTERNATIONAL_PREFIX: &str = "00";
    pub const IOC: Option<IOC> = Some(IOC::TGA);
    pub const ISO_SHORT_NAME: &str = "Tonga";
    pub const ISO_LONG_NAME: &str = "The Kingdom of Tonga";
    pub const OFFICIAL_LANGUAGE_LIST: &[&str] = &["en", "to"];
    pub const SPOKEN_LANGUAGE_LIST: &[&str] = &["en", "to"];
    pub const NATIONAL_DESTINATION_CODE_LENGTH_LIST: &[usize] = &[2];
    pub const NATIONAL_NUMBER_LENGTH_LIST: &[usize] = &[5, 6, 7];
    pub const NATIONAL_PREFIX: &str = "None";
    pub const NATIONALITY: Option<&str> = Some("Tongan");
    pub const NUMBER: &str = "776";
    pub const POSTAL_CODE: bool = false;
    pub const POSTAL_CODE_FORMAT: Option<&str> = None;
    pub const REGION: Option<Region> = Some(Region::Oceania);
    pub const START_DAY_OF_WEEK: WeekDay = WeekDay::Monday;
    pub const SUBREGION: Option<SubRegion> = Some(SubRegion::Polynesia);
    pub const UN_LOCODE: &str = "TO";
    pub const UNOFFICIAL_NAME_LIST: &[&str] = &["Tonga", "„Éà„É≥„Ç¨"];
    pub const WORLD_REGION: WorldRegion = WorldRegion::APAC;
    #[cfg(feature = "translations")]
    pub const TRANSLATIONS: &[(&str, &str)] = &[
        ("ab", "Tonga"),
        ("af", "Tonga"),
        ("ak", "Tonga"),
        ("am", "·â∂·äï·åã"),
        ("an", "Tonga"),
        ("ar", "ÿ™ŸàŸÜÿ∫ÿß"),
        ("as", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
        ("ay", "Tonga"),
        ("az", "Tonqa"),
        ("ba", "Tonga"),
        ("be", "–¢–æ–Ω–≥–∞"),
        ("bg", "–¢–æ–Ω–≥–∞"),
        ("bi", "Tonga"),
        ("bn", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
        ("bn_IN", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
        ("br", "Tonga"),
        ("bs", "Tonga"),
        ("ca", "Tonga"),
        ("ce", "–¢–æ–Ω–≥–∞"),
        ("ch", "Tonga"),
        ("cs", "Tonga"),
        ("cv", "–¢–æ–Ω–≥–∞"),
        ("cy", "Tonga"),
        ("da", "Tonga"),
        ("de", "Tonga"),
        ("dv", "ﬁì\u{7ae}ﬁÇ\u{7b0}ﬁé\u{7a7}"),
        ("dz", "‡Ωä\u{f7c}‡ΩÑ‡ºã‡ΩÇ‡ºç"),
        ("ee", "Tonga"),
        ("el", "Œ§œåŒΩŒ≥Œ∫Œ±"),
        ("en", "Tonga"),
        ("eo", "Tongo"),
        ("es", "Tonga"),
        ("et", "Tonga"),
        ("eu", "Tonga"),
        ("fa", "ÿ™ŸàŸÜ⁄Øÿß"),
        ("ff", "Tonga"),
        ("fi", "Tonga"),
        ("fo", "Tonga"),
        ("fr", "Tonga"),
        ("fy", "Tonga"),
        ("ga", "Tonga"),
        ("gl", "Tonga"),
        ("gn", "Tonga"),
        ("gu", "‡™ü‡´ã\u{a82}‡™ó‡™æ"),
        ("gv", "Yn Tongey"),
        ("ha", "Tonga"),
        ("he", "◊ò◊ï◊†◊í◊î"),
        ("hi", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
        ("hr", "Tonga"),
        ("ht", "Tonga"),
        ("hu", "Tonga"),
        ("hy", "’è’∏’∂’£’°"),
        ("ia", "Tonga"),
        ("id", "Tonga"),
        ("io", "Tonga"),
        ("is", "Tonga"),
        ("it", "Tonga"),
        ("iu", "Tonga"),
        ("ja", "„Éà„É≥„Ç¨"),
        ("ka", "·É¢·Éù·Éú·Éí·Éê"),
        ("ki", "Tonga"),
        ("kk", "–¢–æ–Ω–≥–∞"),
        ("kl", "Tonga"),
        ("km", "·ûè\u{17bb}·ûÑ·û†\u{17d2}·ûÇ·üÑ"),
        ("kn", "‡≤ü‡≥ã‡≤Ç‡≤ó‡≤æ"),
        ("ko", "ÌÜµÍ∞Ä"),
        ("ku", "Tonga"),
        ("kv", "Tonga"),
        ("kw", "Tonga"),
        ("ky", "–¢–æ–Ω–≥–∞"),
        ("lo", "Tonga"),
        ("lt", "Tonga"),
        ("lv", "Tonga"),
        ("mi", "Tonga"),
        ("mk", "–¢–æ–Ω–≥–∞"),
        ("ml", "‡¥ü‡µã‡¥ô\u{d4d}‡¥ï"),
        ("mn", "–¢–æ–Ω–≥–∞"),
        ("mr", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
        ("ms", "Tonga"),
        ("mt", "Tonga"),
        (
            "my",
            "·Äê\u{102f}\u{1036}·ÄÇ·Ä´·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
        ),
        ("na", "Tonga"),
        ("nb", "Tonga"),
        ("ne", "‡§ü‡•ã‡§ô\u{94d}‡§ó‡§æ"),
        ("nl", "Tonga"),
        ("nn", "Tonga"),
        ("nv", "Tonga"),
        ("oc", "T√≤nga"),
        ("or", "‡¨ü‡≠ã‡¨ô\u{b4d}‡¨ó\u{b3e}"),
        ("pa", "‡®ü‡®æ\u{a02}‡®ó‡®æ"),
        ("pi", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
        ("pl", "Tonga"),
        ("ps", "Tonga"),
        ("pt", "Tonga"),
        ("pt_BR", "Tonga"),
        ("ro", "Tonga"),
        ("ru", "–¢–æ–Ω–≥–∞"),
        ("rw", "Tonga"),
        ("sc", "Tonga"),
        ("sd", "Tonga"),
        ("si", "‡∂ß‡∑ú‡∂±\u{dca}‡∂ú\u{dcf}"),
        ("sk", "Tonga"),
        ("sl", "Tonga"),
        ("so", "Tonga"),
        ("sq", "Tonga"),
        ("sr", "–¢–æ–Ω–≥–∞"),
        ("sv", "Tonga"),
        ("sw", "Tonga"),
        ("ta", "‡Æü‡Øä‡Æô\u{bcd}‡Æï\u{bbe}"),
        ("te", "‡∞ü\u{c4b}‡∞Ç‡∞ó\u{c3e}"),
        ("tg", "–¢–æ–Ω–≥–æ"),
        ("th", "‡∏ï‡∏≠‡∏á‡∏Å‡∏≤"),
        ("ti", "Tonga"),
        ("tk", "Tonga"),
        ("tl", "Tonga"),
        ("tr", "Tonga"),
        ("tt", "–¢–æ–Ωg–∞"),
        ("ug", "ÿ™ŸàŸÜ⁄Øÿß"),
        ("uk", "–¢–æ–Ω–≥–∞"),
        ("ur", "ŸπŸàŸÜ⁄Øÿß"),
        ("uz", "Tonga"),
        ("ve", "Tonga"),
        ("vi", "T√¥ng-ga"),
        ("wa", "Tonga"),
        ("wo", "Tonga"),
        ("xh", "Tonga"),
        ("yo", "T√≥ng√†"),
        ("zh_CN", "Ê±§Âä†"),
        ("zh_HK", "ÊπØÂä†"),
        ("zh_TW", "Êù±Âä†"),
        ("zu", "Tonga"),
    ];
    #[cfg(all(feature = "to", feature = "geo", feature = "constants"))]
    /// GEO data as constants
    pub mod geo {
        pub const LATITUDE: f64 = -21.178986;
        pub const LONGITUDE: f64 = -175.198242;
        pub const MAX_LATITUDE: f64 = -15.4060236;
        pub const MAX_LONGITUDE: f64 = -173.2543946;
        pub const MIN_LATITUDE: f64 = -21.8360059;
        pub const MIN_LONGITUDE: f64 = -175.9570313;
        pub const NORTHEAST_LATITUDE: f64 = -15.4060236;
        pub const NORTHEAST_LONGITUDE: f64 = -173.2543946;
        pub const SOUTHWEST_LATITUDE: f64 = -21.8360059;
        pub const SOUTHWEST_LONGITUDE: f64 = -175.9570313;
    }
}
#[cfg(all(feature = "to", feature = "geo"))]
/// GEO module for this country.
pub mod geo {
    use crate::{CountryGeo, CountryGeoBound, CountryGeoBounds};

    /// GEO information for this country.
    pub fn new() -> CountryGeo {
        CountryGeo {
            latitude: -21.178986,
            longitude: -175.198242,
            max_latitude: -15.4060236,
            max_longitude: -173.2543946,
            min_latitude: -21.8360059,
            min_longitude: -175.9570313,
            bounds: CountryGeoBounds {
                northeast: CountryGeoBound {
                    latitude: -15.4060236,
                    longitude: -173.2543946,
                },
                southwest: CountryGeoBound {
                    latitude: -21.8360059,
                    longitude: -175.9570313,
                },
            },
        }
    }
}

#[cfg(all(feature = "to", feature = "subdivisions"))]
/// Subdivision module for this country.
pub mod subdivisions {
    #[allow(unused_imports)]
    use crate::{Alpha2, Subdivision, SubdivisionType};
    use std::collections::HashMap;
    // In this state, We do not know if subdivisions have geo or not!
    #[cfg(feature = "geo")]
    #[allow(unused_imports)]
    use crate::SubdivisionGeo;

    /// Subdivisions for this country.
    pub fn new() -> HashMap<&'static str, Subdivision> {
        HashMap::from([
            (
                "01",
                Subdivision {
                    name: "'Eua",
                    country_alpha2: Alpha2::TO,
                    code: "01",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(-21.3631956),
                        longitude: Some(-174.9297206),
                        max_latitude: Some(-21.2833727),
                        min_latitude: Some(-21.455057),
                        max_longitude: Some(-174.9043558),
                        min_longitude: Some(-174.9722574),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Division,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("bn", "‡¶á‡¶ä‡¶Ø\u{9bc}\u{9be}"),
                        ("ca", "‚ÄòEua"),
                        ("ccp", "ëÑÉ\u{11128}ëÑÖ\u{1112a}ëÑ†"),
                        ("ceb", "Eua"),
                        ("da", "Eua"),
                        ("de", " ªEua"),
                        ("el", "ŒàŒøœÖŒ±"),
                        ("en", " ªEua"),
                        ("es", "‚ÄòEua"),
                        ("fa", "ÿßÿ¶Ÿàÿ¢"),
                        ("fi", " ªEua"),
                        ("gl", "‚ÄòEua"),
                        ("gu", "‡™á‡™Ü"),
                        ("hi", "‡§Ø\u{941}‡§Ü"),
                        ("id", " ªEua"),
                        ("ja", "„Ç®„Ç¶„Ç¢Â≥∂"),
                        ("ka", "·Éî·É£·Éê"),
                        ("kn", "‡≤Ø‡≥Å‡≤µ‡≤æ"),
                        ("ko", "ÏóêÏö∞ÏïÑ ÏÑ¨"),
                        ("lt", "Eva"),
                        ("lv", "Euva"),
                        ("mr", "‡§à‡§Ü"),
                        ("ms", " ªEua"),
                        ("nl", "‚ÄòEua"),
                        ("pl", " ªEua"),
                        ("pt", " ªEua"),
                        ("ru", "–≠—É–∞"),
                        ("si", "‡∂â‡∂∫\u{dd4}‡∑Ä\u{dcf}"),
                        ("sv", "‚ÄòEua"),
                        ("te", "‡∞Ø‡±Ç‡∞µ\u{c3e}"),
                        ("th", "‡πÄ‡∏≠‡∏≠\u{e31}‡∏ß"),
                        ("tr", "Eua"),
                        ("uk", "–ï—É–∞ (–æ—Å—Ç—Ä—ñ–≤)"),
                        ("ur", "€åŸàÿß"),
                        ("vi", "Eua"),
                        ("zh", "ÂüÉÁì¶Â≥∂"),
                    ]),
                    unofficial_name_list: ["Middleburg Island", " øEua"].to_vec(),
                },
            ),
            (
                "02",
                Subdivision {
                    name: "Ha'apai",
                    country_alpha2: Alpha2::TO,
                    code: "02",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(-19.7506337),
                        longitude: Some(-175.0545197),
                        max_latitude: Some(-19.5930023),
                        min_latitude: Some(-20.5583992),
                        max_longitude: Some(-174.268463),
                        min_longitude: Some(-175.417755),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Division,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "Ÿáÿßÿ®ÿßŸä"),
                        ("bn", "‡¶π\u{9be}‚Äò‡¶Ü‡¶™\u{9be}‡¶á"),
                        ("ca", "Ha‚Äôapai"),
                        ("ccp", "ëÑ¶‚ÄòëÑÉëÑ¨ëÑõ\u{1112d}"),
                        ("ceb", "Ha‚Äòapai"),
                        ("da", "Ha ªapai"),
                        ("de", "Ha ªapai"),
                        ("el", "ŒßŒ±Œ≥ŒπŒ±œÄŒ≠Œπ"),
                        ("en", "Ha ªapai"),
                        ("es", "Grupo G√°lvez"),
                        ("fa", "Ÿáÿßÿ¢Ÿæÿß€å€å"),
                        ("fi", "Ha ªapai"),
                        ("fr", "Ha‚Äôapai"),
                        ("gl", "Ha‚Äôapai"),
                        ("gu", "‡™π‡™æ‡™™\u{ac7}‡™á"),
                        ("hi", "‡§π‡§æ‡§™‡§æ‡§à"),
                        ("id", "Ha ªapai"),
                        ("it", "Ha ªapai"),
                        ("ja", "„Éè„Ç¢„Éë„Ç§Ë´∏Â≥∂"),
                        ("ka", "·É∞·Éê·Éê·Éû·Éê·Éò·É° ·Éô·É£·Éú·É´·É£·Éö·Éî·Éë·Éò"),
                        ("kn", "‡≤π\u{ccd}‡≤Ø‡≤æ‡≤™‡≤æ‡≤Ø\u{cbf}"),
                        ("ko", "ÌïòÌååÏù¥ Ï†úÎèÑ"),
                        ("lt", "Ha‚Äôapai"),
                        ("lv", "Haapai"),
                        ("mr", "‡§π‡§æ‡§™‡§æ‡§à"),
                        ("ms", "Ha ªapai"),
                        ("nb", "Ha‚Äôapai"),
                        ("nl", "Ha‚Äôapai"),
                        ("no", "Ha‚Äôapai"),
                        ("pl", "Archipelag Ha‚Äôapai"),
                        ("pt", "Ha‚Äôapai"),
                        ("ru", "–û—Å—Ç—Ä–æ–≤–∞ –•–∞–∞–ø–∞–π"),
                        ("si", "‡∑Ñ\u{dcf} ‚Äò‡∂Ö‡∂¥\u{dcf}‡∂∫\u{dd2}"),
                        ("sv", "Ha‚Äôapai"),
                        ("te", "‡∞π\u{c3e}‚Äò‡∞Ö‡∞™\u{c47}‡∞Ø\u{c4d}"),
                        ("th", "‡∏Æ‡∏≤‡∏≠‡∏∞‡πÑ‡∏õ"),
                        ("tr", "Ha ªapai"),
                        ("uk", "–•–∞ º–∞–ø–∞—ó (–æ—Å—Ç—Ä–æ–≤–∏)"),
                        ("ur", "€Åÿ¢Ÿæÿßÿ¶€å"),
                        ("vi", "Ha ªapai"),
                        ("zh", "ÂìàÊ¥æÁæ§Â≥∂"),
                    ]),
                    unofficial_name_list: ["Ha'apai"].to_vec(),
                },
            ),
            (
                "03",
                Subdivision {
                    name: "Niuas",
                    country_alpha2: Alpha2::TO,
                    code: "03",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(-15.6097616),
                        longitude: Some(-175.6332093),
                        max_latitude: Some(-15.5663927),
                        min_latitude: Some(-15.9637832),
                        max_longitude: Some(-173.7024841),
                        min_longitude: Some(-175.6796157),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Division,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÜŸäŸàÿßÿ≥"),
                        ("bn", "‡¶®‡¶ø‡¶â‡¶Ø\u{9bc}\u{9be}‡¶∏"),
                        ("ca", "Niuas"),
                        ("ccp", "ëÑö\u{11128}ëÑÖ\u{1112a}ëÑ†ëÑå\u{11134}"),
                        ("ceb", "Niuas"),
                        ("da", "Niuas"),
                        ("de", "Niuas"),
                        ("el", "ŒùŒπŒøœçŒ±œÇ"),
                        ("en", "Niuas"),
                        ("es", "Grupo Niuas"),
                        ("fi", "Niuas"),
                        ("fr", "Niuas"),
                        ("gl", "Grupo Niuas"),
                        ("gu", "‡™®‡™ø‡™â‡™Ü‡™∏"),
                        ("hi", "‡§®‡§ø‡§â‡§Ü‡§∏"),
                        ("id", "Niuas"),
                        ("it", "Niuas"),
                        ("ja", "„Éã„Ç¶„Ç¢„ÇπË´∏Â≥∂"),
                        ("ka", "·Éú·Éò·É£·Éê·É°·Éò·É° ·Éô·É£·Éú·É´·É£·Éö·Éî·Éë·Éò"),
                        ("kn", "‡≤®\u{cbf}‡≤Ø‡≥ã‡≤µ‡≤æ‡≤∏\u{ccd}"),
                        ("ko", "ÎãàÏö∞ÏïÑÏä§ Ï†úÎèÑ"),
                        ("lt", "Niuasas"),
                        ("lv", "Niuasa"),
                        ("mr", "‡§®‡§ø‡§ä‡§Ö‡§∏\u{902}"),
                        ("ms", "Niuas"),
                        ("nb", "Niuas"),
                        ("nl", "Niuas"),
                        ("no", "Niuas"),
                        ("pl", "Niuas"),
                        ("pt", "Niuas"),
                        ("ru", "–û—Å—Ç—Ä–æ–≤–∞ –ù–∏—É–∞—Å"),
                        ("si", "‡∂±\u{dd2}‡∂∫\u{dd4}‡∑Ä\u{dcf}‡∑É\u{dca}"),
                        ("sv", "Niuas"),
                        ("ta", "‡Æ©‡Æø‡ÆØ‡Æ∏\u{bcd}"),
                        ("te", "‡∞®\u{c3f}‡∞Ø‡±Å‡∞µ‡∞∏\u{c4d}"),
                        ("th", "‡∏ô\u{e35}‡∏≠\u{e39}‡∏≠‡∏≤‡∏™"),
                        ("tr", "Niuas"),
                        ("uk", "–ù—ñ—É–∞—Å (–æ—Å—Ç—Ä–æ–≤–∏)"),
                        ("ur", "ŸÜ€åŸàÿßÿ≥"),
                        ("vi", "Niuas"),
                        ("zh", "Á¥êÈòøÊñØÁæ§Â≥∂"),
                    ]),
                    unofficial_name_list: ["Niuas"].to_vec(),
                },
            ),
            (
                "04",
                Subdivision {
                    name: "Tongatapu",
                    country_alpha2: Alpha2::TO,
                    code: "04",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(-21.1465968),
                        longitude: Some(-175.2515482),
                        max_latitude: Some(-21.061676),
                        min_latitude: Some(-21.278193),
                        max_longitude: Some(-175.0285149),
                        min_longitude: Some(-175.3613689),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Division,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ÿ™ŸàŸÜÿ∫ÿßÿ™ÿßÿ®Ÿà"),
                        ("be", "–í–æ—Å—Ç—Ä–∞—û –¢–∞–Ω–≥–∞—Ç–∞–ø—É"),
                        ("bn", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}‡¶ü\u{9be}‡¶™\u{9c1}"),
                        ("ca", "Tongatapu"),
                        ("ccp", "ëÑë\u{11127}\u{11101}ëÑâëÑëëÑõ\u{1112a}"),
                        ("ceb", "Tongatapu"),
                        ("da", "Tongatapu"),
                        ("de", "Tongatapu"),
                        ("el", "Œ§ŒøŒΩŒ≥Œ∫Œ±œÑŒ¨œÄŒøœÖ"),
                        ("en", "Tongatapu"),
                        ("es", "Tongatapu"),
                        ("fa", "ÿ™ŸàŸÜ⁄Øÿßÿ™ÿßŸæŸà"),
                        ("fi", "Tongatapu"),
                        ("fr", "Tongatapu"),
                        ("gl", "Tongatapu"),
                        ("gu", "‡™ü‡´ã\u{a82}‡™ó‡™æ‡™ü‡™æ‡™™\u{ac1}"),
                        ("he", "◊†◊ï◊ß◊ï◊ê◊ú◊ï◊§◊î"),
                        ("hi", "‡§ü‡•ã\u{902}‡§ó‡§ü‡§æ‡§™\u{942}"),
                        ("id", "Tongatapu"),
                        ("it", "Tongatapu"),
                        ("ja", "„Éà„É≥„Ç¨„Çø„ÉóÂ≥∂"),
                        ("ka", "·É¢·Éù·Éú·Éí·Éê·É¢·Éê·Éû·É£"),
                        ("kn", "‡≤ü‡≥ã‡≤Ç‡≤ó‡≤ü‡≤æ‡≤™‡≥Å"),
                        ("ko", "ÌÜµÍ∞ÄÌÉÄÌë∏ ÏÑ¨"),
                        ("lt", "Tongatapu"),
                        ("mr", "‡§ü‡•ã\u{902}‡§ó‡§æ‡§ü‡§æ‡§™\u{942}"),
                        ("ms", "Tongatapu"),
                        ("nb", "Tongatapu"),
                        ("nl", "Tongatapu"),
                        ("no", "Tongatapu"),
                        ("pl", "Tongatapu"),
                        ("pt", "Tongatapu"),
                        ("ro", "Tongatapu"),
                        ("ru", "–¢–æ–Ω–≥–∞—Ç–∞–ø—É"),
                        ("si", "‡∂ß‡∑ú‡∂±\u{dca}‡∂ú‡∂ß‡∂¥\u{dd4}"),
                        ("sv", "Tongatapu"),
                        ("ta", "‡Æ§‡Øä‡Æô\u{bcd}‡Æï‡Æü\u{bcd}‡Æü\u{bbe}‡Æ™\u{bcd}‡Æ™‡ØÅ"),
                        ("te", "‡∞ü\u{c4b}‡∞Ç‡∞ó\u{c3e}‡∞ü\u{c3e}‡∞™‡±Å"),
                        ("th", "‡πÇ‡∏ï‡∏á‡∏≤‡∏ï‡∏≤‡∏õ\u{e39}"),
                        ("tr", "Tongatapu"),
                        ("uk", "–¢–æ–Ω–≥–∞—Ç–∞–ø—É (–æ—Å—Ç—Ä–æ–≤–∏)"),
                        ("ur", "ŸπŸàŸÜ⁄ØÿßŸπÿßŸæŸà"),
                        ("vi", "Tongatapu"),
                        ("zh", "Ê±§Âä†Â°îÂ∏ÉÂ≤õ"),
                    ]),
                    unofficial_name_list: ["Tongatapu"].to_vec(),
                },
            ),
            (
                "05",
                Subdivision {
                    name: "Vava'u",
                    country_alpha2: Alpha2::TO,
                    code: "05",
                    #[cfg(feature = "geo")]
                    geo: Some(SubdivisionGeo {
                        latitude: Some(-18.5811962),
                        longitude: Some(-173.985008),
                        max_latitude: Some(-18.0082895),
                        min_latitude: Some(-19.180176),
                        max_longitude: Some(-173.907578),
                        min_longitude: Some(-174.8671875),
                    }),
                    comments: None,
                    subdivision_type: SubdivisionType::Division,
                    #[cfg(feature = "translations")]
                    translations: HashMap::from([
                        ("ar", "ŸÅÿßŸÅÿßŸà"),
                        ("bg", "–í–∞–≤–∞—É"),
                        ("bn", "‡¶≠\u{9be}‡¶≠\u{9be}‡¶â"),
                        ("ca", "Vava‚Äôu"),
                        ("ccp", "ëÑûëÑû‚ÄòëÑÖ\u{1112a}"),
                        ("ceb", "Vava‚Äòu"),
                        ("da", "Vava ªu"),
                        ("de", "Vava‚Äôu"),
                        ("el", "ŒíŒ±Œ≤Œ¨ŒøœÖ"),
                        ("en", "Vava ªu"),
                        ("es", "Vava‚Äôu"),
                        ("fa", "ÿ¨ÿ≤€åÿ±Ÿá ŸàÿßŸàÿßÿ¶Ÿà"),
                        ("fi", "Vava ªu"),
                        ("fr", "Vava‚Äôu"),
                        ("gl", "Grupo Vava‚Äôu"),
                        ("gu", "‡™µ‡™æ‡™µ‡™æ‡™â"),
                        ("hi", "‡§µ‡§æ‡§µ‡§æ‡§â"),
                        ("id", "Vava‚Äôu"),
                        ("it", "Vava‚Äôu"),
                        ("ja", "„É¥„Ç°„É¥„Ç°„Ç¶Ë´∏Â≥∂"),
                        ("ka", "·Éï·Éê·Éï·Éê·É£·É° ·Éô·É£·Éú·É´·É£·Éö·Éî·Éë·Éò"),
                        ("kn", "‡≤µ‡≤µ‡≤æ‡≤µ‡≥Å"),
                        ("ko", "Î∞îÎ∞îÏö∞ Ï†úÎèÑ"),
                        ("lt", "Vava‚Äôu"),
                        ("lv", "Vava ªu"),
                        ("mr", "‡§µ‡§æ‡§µ‡§æ‡§ä"),
                        ("ms", "Vava ªu"),
                        ("nb", "Vava‚Äôu"),
                        ("nl", "Vava‚Äôu"),
                        ("no", "Vava‚Äôu"),
                        ("pl", "Vava‚Äôu"),
                        ("pt", "Vava‚Äôu"),
                        ("ru", "–í–∞–≤–∞—É"),
                        ("si", "‡∑Ä‡∑Ä\u{dcf} ‚Äò‡∂ã"),
                        ("sv", "Vava‚Äôu"),
                        ("te", "‡∞µ\u{c3e}‡∞µ\u{c3e}‡∞Ø‡±Å"),
                        ("th", "‡∏ß‡∏≤‡∏ß‡∏≤‡∏≠\u{e39}"),
                        ("tr", "Vava‚Äôu"),
                        ("uk", "–í–∞–≤–∞ º—É"),
                        ("ur", "ŸàÿßŸàÿßÿ§"),
                        ("vi", "Vava ªu"),
                        ("zh", "Áì¶Áì¶ÁÉèÁæ§Â≥∂"),
                    ]),
                    unofficial_name_list: ["Vava'u"].to_vec(),
                },
            ),
        ])
    }
}
#[allow(unused_imports)]
use crate::{
    Alpha2, Alpha3, Continent, Country, CurrencyCode, Region, SubRegion, WeekDay, WorldRegion, GEC,
    IOC,
};
#[allow(unused_imports)]
use std::collections::HashMap;
#[cfg(feature = "to")]
/// [`Country`](crate::Country) struct for this country.
pub fn new() -> Country {
    Country {
        alpha2: Alpha2::TO,
        alpha3: Alpha3::TON,
        address_format: None,
        continent: Continent::Australia,
        country_code: 676,
        currency_code: CurrencyCode::TOP,
        gec: Some(GEC::TN),
        #[cfg(feature = "geo")]
        geo: geo::new(),
        international_prefix: "00",
        ioc: Some(IOC::TGA),
        iso_long_name: "The Kingdom of Tonga",
        iso_short_name: "Tonga",
        official_language_list: ["en", "to"].to_vec(),
        spoken_language_list: ["en", "to"].to_vec(),
        national_destination_code_length_list: [2].to_vec(),
        national_number_length_list: [5, 6, 7].to_vec(),
        national_prefix: "None",
        nationality: Some("Tongan"),
        number: "776",
        postal_code: false,
        postal_code_format: None,
        region: Some(Region::Oceania),
        start_of_week: WeekDay::Monday,
        subregion: Some(SubRegion::Polynesia),
        un_locode: "TO",
        unofficial_name_list: ["Tonga", "„Éà„É≥„Ç¨"].to_vec(),
        world_region: WorldRegion::APAC,
        #[cfg(feature = "translations")]
        translations: HashMap::from([
            ("ab", "Tonga"),
            ("af", "Tonga"),
            ("ak", "Tonga"),
            ("am", "·â∂·äï·åã"),
            ("an", "Tonga"),
            ("ar", "ÿ™ŸàŸÜÿ∫ÿß"),
            ("as", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
            ("ay", "Tonga"),
            ("az", "Tonqa"),
            ("ba", "Tonga"),
            ("be", "–¢–æ–Ω–≥–∞"),
            ("bg", "–¢–æ–Ω–≥–∞"),
            ("bi", "Tonga"),
            ("bn", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
            ("bn_IN", "‡¶ü‡ßã‡¶ô\u{9cd}‡¶ó\u{9be}"),
            ("br", "Tonga"),
            ("bs", "Tonga"),
            ("ca", "Tonga"),
            ("ce", "–¢–æ–Ω–≥–∞"),
            ("ch", "Tonga"),
            ("cs", "Tonga"),
            ("cv", "–¢–æ–Ω–≥–∞"),
            ("cy", "Tonga"),
            ("da", "Tonga"),
            ("de", "Tonga"),
            ("dv", "ﬁì\u{7ae}ﬁÇ\u{7b0}ﬁé\u{7a7}"),
            ("dz", "‡Ωä\u{f7c}‡ΩÑ‡ºã‡ΩÇ‡ºç"),
            ("ee", "Tonga"),
            ("el", "Œ§œåŒΩŒ≥Œ∫Œ±"),
            ("en", "Tonga"),
            ("eo", "Tongo"),
            ("es", "Tonga"),
            ("et", "Tonga"),
            ("eu", "Tonga"),
            ("fa", "ÿ™ŸàŸÜ⁄Øÿß"),
            ("ff", "Tonga"),
            ("fi", "Tonga"),
            ("fo", "Tonga"),
            ("fr", "Tonga"),
            ("fy", "Tonga"),
            ("ga", "Tonga"),
            ("gl", "Tonga"),
            ("gn", "Tonga"),
            ("gu", "‡™ü‡´ã\u{a82}‡™ó‡™æ"),
            ("gv", "Yn Tongey"),
            ("ha", "Tonga"),
            ("he", "◊ò◊ï◊†◊í◊î"),
            ("hi", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
            ("hr", "Tonga"),
            ("ht", "Tonga"),
            ("hu", "Tonga"),
            ("hy", "’è’∏’∂’£’°"),
            ("ia", "Tonga"),
            ("id", "Tonga"),
            ("io", "Tonga"),
            ("is", "Tonga"),
            ("it", "Tonga"),
            ("iu", "Tonga"),
            ("ja", "„Éà„É≥„Ç¨"),
            ("ka", "·É¢·Éù·Éú·Éí·Éê"),
            ("ki", "Tonga"),
            ("kk", "–¢–æ–Ω–≥–∞"),
            ("kl", "Tonga"),
            ("km", "·ûè\u{17bb}·ûÑ·û†\u{17d2}·ûÇ·üÑ"),
            ("kn", "‡≤ü‡≥ã‡≤Ç‡≤ó‡≤æ"),
            ("ko", "ÌÜµÍ∞Ä"),
            ("ku", "Tonga"),
            ("kv", "Tonga"),
            ("kw", "Tonga"),
            ("ky", "–¢–æ–Ω–≥–∞"),
            ("lo", "Tonga"),
            ("lt", "Tonga"),
            ("lv", "Tonga"),
            ("mi", "Tonga"),
            ("mk", "–¢–æ–Ω–≥–∞"),
            ("ml", "‡¥ü‡µã‡¥ô\u{d4d}‡¥ï"),
            ("mn", "–¢–æ–Ω–≥–∞"),
            ("mr", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
            ("ms", "Tonga"),
            ("mt", "Tonga"),
            (
                "my",
                "·Äê\u{102f}\u{1036}·ÄÇ·Ä´·Äî\u{102d}\u{102f}·ÄÑ\u{103a}·ÄÑ\u{1036}",
            ),
            ("na", "Tonga"),
            ("nb", "Tonga"),
            ("ne", "‡§ü‡•ã‡§ô\u{94d}‡§ó‡§æ"),
            ("nl", "Tonga"),
            ("nn", "Tonga"),
            ("nv", "Tonga"),
            ("oc", "T√≤nga"),
            ("or", "‡¨ü‡≠ã‡¨ô\u{b4d}‡¨ó\u{b3e}"),
            ("pa", "‡®ü‡®æ\u{a02}‡®ó‡®æ"),
            ("pi", "‡§ü‡•ã\u{902}‡§ó‡§æ"),
            ("pl", "Tonga"),
            ("ps", "Tonga"),
            ("pt", "Tonga"),
            ("pt_BR", "Tonga"),
            ("ro", "Tonga"),
            ("ru", "–¢–æ–Ω–≥–∞"),
            ("rw", "Tonga"),
            ("sc", "Tonga"),
            ("sd", "Tonga"),
            ("si", "‡∂ß‡∑ú‡∂±\u{dca}‡∂ú\u{dcf}"),
            ("sk", "Tonga"),
            ("sl", "Tonga"),
            ("so", "Tonga"),
            ("sq", "Tonga"),
            ("sr", "–¢–æ–Ω–≥–∞"),
            ("sv", "Tonga"),
            ("sw", "Tonga"),
            ("ta", "‡Æü‡Øä‡Æô\u{bcd}‡Æï\u{bbe}"),
            ("te", "‡∞ü\u{c4b}‡∞Ç‡∞ó\u{c3e}"),
            ("tg", "–¢–æ–Ω–≥–æ"),
            ("th", "‡∏ï‡∏≠‡∏á‡∏Å‡∏≤"),
            ("ti", "Tonga"),
            ("tk", "Tonga"),
            ("tl", "Tonga"),
            ("tr", "Tonga"),
            ("tt", "–¢–æ–Ωg–∞"),
            ("ug", "ÿ™ŸàŸÜ⁄Øÿß"),
            ("uk", "–¢–æ–Ω–≥–∞"),
            ("ur", "ŸπŸàŸÜ⁄Øÿß"),
            ("uz", "Tonga"),
            ("ve", "Tonga"),
            ("vi", "T√¥ng-ga"),
            ("wa", "Tonga"),
            ("wo", "Tonga"),
            ("xh", "Tonga"),
            ("yo", "T√≥ng√†"),
            ("zh_CN", "Ê±§Âä†"),
            ("zh_HK", "ÊπØÂä†"),
            ("zh_TW", "Êù±Âä†"),
            ("zu", "Tonga"),
        ]),
        #[cfg(feature = "subdivisions")]
        subdivisions: subdivisions::new(),
    }
}
